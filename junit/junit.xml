<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="1" name="pytest" skips="0" tests="428" time="3.482"><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="6" name="test_empty_validators_list" time="0.0021371841430664062"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="13" name="test_list_implicit_and" time="0.0016222000122070312"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="22" name="test_not_not_all" time="0.0032112598419189453"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="56" name="test_validate_or" time="0.001935720443725586"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="82" name="test_validate_xor" time="0.001728057861328125"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="106" name="test_validate_and" time="0.0020313262939453125"></testcase><testcase classname="valid8.tests.test_entry_points" file="valid8/tests/test_entry_points.py" line="3" name="test_validate_create_manually" time="0.002395153045654297"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="9" name="test_validate_field" time="0.0033631324768066406"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="55" name="test_validate_field_property" time="0.003495931625366211"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="106" name="test_validate_field_custom_type" time="0.004451751708984375"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="146" name="test_validate_attr" time="0.002910614013671875"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="158" name="test_validate_arg_nominal_builtin_validators" time="0.005007743835449219"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="188" name="test_validate_out" time="0.0038704872131347656"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="205" name="test_validate_nominal_builtin_validators" time="0.004285335540771484"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="235" name="test_validate_custom_validators_basic" time="0.0033464431762695312"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="283" name="test_validate_custom_validators_with_exception" time="0.002753734588623047"><system-out>hello
1
2
3
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="336" name="test_validate_mini_lambda" time="0.0020089149475097656"><system-out>Hello, john your age is 20
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="349" name="test_validate_none_enforce" time="0.018084049224853516"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="373" name="test_validate_none_pytypes" time="0.011351346969604492"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="397" name="test_validate_none_is_allowed" time="0.0025970935821533203"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="409" name="test_validate_name_error" time="0.0016357898712158203"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="418" name="test_decorate_manually" time="0.0021653175354003906"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="430" name="test_validate_tracebacks" time="0.0034072399139404297"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="12" name="test_validate_" time="0.002340555191040039"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="39" name="test_readme_usage_validate__customization" time="0.0027017593383789062"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="74" name="test_wrap_valid" time="0.002605915069580078"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="105" name="test_readme_usage_wrap_valid_customization" time="0.003081083297729492"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="142" name="test_validate_tracebacks" time="0.002123594284057617"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="162" name="test_typos_in_kwargs" time="0.0013926029205322266"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="170" name="test_validate_auto_disable_display" time="0.0018649101257324219"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="189" name="test_numpy_nan" time="0.0017375946044921875"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="198" name="test_numpy_nan_like_lengths" time="0.0007710456848144531"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="232" name="test_function_setter_name_in_valid8_error_message" time="0.03144121170043945"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="21" name="test_named_import[composition_or_]" time="0.0031185150146484375"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="21" name="test_named_import[composition_not_all]" time="0.0017061233520507812"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="21" name="test_named_import[composition_not_]" time="0.0018393993377685547"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="21" name="test_named_import[composition_and_]" time="0.0014958381652832031"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="21" name="test_named_import[composition_AllValidatorsFailed]" time="0.0013492107391357422"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="21" name="test_named_import[composition_failure_raiser]" time="0.0017447471618652344"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="21" name="test_named_import[composition_skip_on_none]" time="0.0017299652099609375"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="21" name="test_named_import[composition_AtLeastOneFailed]" time="0.0016927719116210938"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="21" name="test_named_import[composition_xor_]" time="0.0017020702362060547"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="21" name="test_named_import[composition_CompositionFailure]" time="0.0015952587127685547"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="21" name="test_named_import[composition_XorTooManySuccess]" time="0.001220703125"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="21" name="test_named_import[composition_fail_on_none]" time="0.0015430450439453125"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="21" name="test_named_import[composition_DidNotFail]" time="0.0015876293182373047"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="26" name="test_import_from[composition_or_]" time="0.0017681121826171875"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="26" name="test_import_from[composition_not_all]" time="0.0017085075378417969"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="26" name="test_import_from[composition_not_]" time="0.001767873764038086"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="26" name="test_import_from[composition_and_]" time="0.001573801040649414"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="26" name="test_import_from[composition_AllValidatorsFailed]" time="0.0012423992156982422"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="26" name="test_import_from[composition_failure_raiser]" time="0.0017528533935546875"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="26" name="test_import_from[composition_skip_on_none]" time="0.0013797283172607422"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="26" name="test_import_from[composition_AtLeastOneFailed]" time="0.001659393310546875"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="26" name="test_import_from[composition_xor_]" time="0.0017538070678710938"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="26" name="test_import_from[composition_CompositionFailure]" time="0.0018808841705322266"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="26" name="test_import_from[composition_XorTooManySuccess]" time="0.0012836456298828125"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="26" name="test_import_from[composition_fail_on_none]" time="0.0015716552734375"></testcase><testcase classname="valid8.tests.packaging.test_packaging" file="valid8/tests/packaging/test_packaging.py" line="26" name="test_import_from[composition_DidNotFail]" time="0.003015756607055664"></testcase><testcase classname="valid8.tests.packaging.test_packaging_wildcard" file="valid8/tests/packaging/test_packaging_wildcard.py" line="3" name="test_wild_import" time="0.0014777183532714844"></testcase><testcase classname="valid8.tests.readme.test_readme_combining" file="valid8/tests/readme/test_readme_combining.py" line="7" name="test_readme_index_combining_enforce" time="0.015784025192260742"><system-out>Building house... DONE !
Building house... DONE !
</system-out></testcase><testcase classname="valid8.tests.readme.test_readme_combining" file="valid8/tests/readme/test_readme_combining.py" line="16" name="test_readme_index_combining_autoclass" time="0.007925033569335938"></testcase><testcase classname="valid8.tests.readme.test_readme_combining" file="valid8/tests/readme/test_readme_combining.py" line="48" name="test_readme_index_combining_autoclass_2" time="0.007646799087524414"></testcase><testcase classname="valid8.tests.readme.test_readme_combining" file="valid8/tests/readme/test_readme_combining.py" line="79" name="test_readme_index_combining_attrs" time="0.0054569244384765625"></testcase><testcase classname="valid8.tests.readme.test_readme_combining" file="valid8/tests/readme/test_readme_combining.py" line="111" name="test_unused_pytypes" time="0.019390583038330078"><system-out>you did it !
you did it !
</system-out></testcase><testcase classname="valid8.tests.readme.test_readme_examples" file="valid8/tests/readme/test_readme_examples.py" line="7" name="test_readme_examples_4" time="0.0045354366302490234"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="8" name="test_readme_index_usage_quick" time="0.0019538402557373047"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="22" name="test_readme_usage_wrap_valid" time="0.008081436157226562"><failure message="AssertionError: assert &apos;Error valida... value: [1j].&apos; == &apos;Error validat... value: [1j].&apos;
  - Error validating [surface=1j]. Validation function [assert_instance_of(surf, int)] raised HasWrongType: Value should be an instance of &lt;class &apos;int&apos;&gt;. Wrong value: [1j].
  + Error validating [surface=1j]. Validation function [assert_instance_of(surf, int) ; v.alid = surf &gt; 0] raised HasWrongType: Value should be an instance of &lt;class &apos;int&apos;&gt;. Wrong value: [1j].
  ?                                                                                  ++++++++++++++++++++">def test_readme_usage_wrap_valid():
        &quot;&quot;&quot; Tests that the example under index/usage/validation works &quot;&quot;&quot;
    
        surf = -1
    
        with pytest.raises(ValidationError) as exc_info:
            with wrap_valid(&apos;surface&apos;, surf) as v:
                v.alid = surf &gt; 0 and isfinite(surf)
        e = exc_info.value
        assert str(e) == &quot;Error validating [surface=-1]: &quot; \
                         &quot;validation function [v.alid = surf &gt; 0 and isfinite(surf)] returned [False].&quot;
    
        surf = 1j
    
        with pytest.raises(ValidationError) as exc_info:
            with wrap_valid(&apos;surface&apos;, surf) as v:
                v.alid = surf &gt; 0 and isfinite(surf)
        e = exc_info.value
        assert str(e).startswith(&quot;Error validating [surface=1j]. &quot; \
                                 &quot;Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised &quot; \
                                 &quot;TypeError:&quot;)
    
        # alternate naming
        surf = -1
        with pytest.raises(ValidationError) as exc_info:
            with wrap_valid(&apos;surface&apos;, surf) as r:
                r.esults = surf &gt; 0 and isfinite(surf)
        e = exc_info.value
        assert str(e) == &quot;Error validating [surface=-1]: &quot; \
                         &quot;validation function [r.esults = surf &gt; 0 and isfinite(surf)] returned [False].&quot;
    
        # type validation
        surf = 1j
        with pytest.raises(ValidationError) as exc_info:
            with wrap_valid(&apos;surface&apos;, surf, instance_of=int) as v:
                v.alid = surf &gt; 0
        e = exc_info.value
        assert str(e) == &quot;Error validating [surface=1j]. &quot; \
                         &quot;HasWrongType: Value should be an instance of %s. Wrong value: [1j].&quot; % repr(int)
    
        from valid8 import assert_instance_of
        with pytest.raises(ValidationError) as exc_info:
            with wrap_valid(&apos;surface&apos;, surf) as v:
                assert_instance_of(surf, int)
                v.alid = surf &gt; 0
        e = exc_info.value
&gt;       assert str(e) == &quot;Error validating [surface=1j]. &quot; \
                         &quot;Validation function [assert_instance_of(surf, int) ; v.alid = surf &gt; 0] raised &quot; \
                         &quot;HasWrongType: Value should be an instance of %s. Wrong value: [1j].&quot; % repr(int)
E       AssertionError: assert &apos;Error valida... value: [1j].&apos; == &apos;Error validat... value: [1j].&apos;
E         - Error validating [surface=1j]. Validation function [assert_instance_of(surf, int)] raised HasWrongType: Value should be an instance of &lt;class &apos;int&apos;&gt;. Wrong value: [1j].
E         + Error validating [surface=1j]. Validation function [assert_instance_of(surf, int) ; v.alid = surf &gt; 0] raised HasWrongType: Value should be an instance of &lt;class &apos;int&apos;&gt;. Wrong value: [1j].
E         ?                                                                                  ++++++++++++++++++++

valid8/tests/readme/test_readme_index.py:69: AssertionError</failure></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="73" name="test_readme_usage_customization" time="0.003880739212036133"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="132" name="test_readme_index_usage_basic" time="0.002848386764526367"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="156" name="test_readme_index_usage_function" time="0.0048160552978515625"><system-out>Building house... DONE !
Building house... DONE !
Building house... DONE !
</system-out></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="202" name="test_readme_index_usage_class_fields" time="0.0043735504150390625"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="236" name="test_testing" time="0.002067089080810547"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="251" name="test_advanced_composition" time="0.0018973350524902344"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="270" name="test_readme_index_usage_customization" time="0.002711772918701172"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="329" name="test_readme_index_usage_composition" time="0.002787351608276367"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="9" name="test_tutorial" time="0.003576040267944336"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="67" name="test_usage_base_validation_functions" time="0.0015282630920410156"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="73" name="test_usage_ensure_valid" time="0.005788564682006836"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="120" name="test_usage_is_valid" time="0.002371549606323242"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="157" name="test_usage_validators" time="0.005071401596069336"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="310" name="test_usage_validate_annotation" time="0.003576993942260742"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="326" name="test_usage_custom_validators" time="0.0043752193450927734"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_mini_lambda-0-True]" time="0.00344085693359375"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_mini_lambda-100-True]" time="0.0032591819763183594"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_mini_lambda-foo-TypeError]" time="0.004626035690307617"><system-out>Error validating field [x=foo] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;x &gt;= 0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_mini_lambda-1.0-TypeError]" time="0.0037865638732910156"><system-out>Error validating field [x=1.0] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;x &gt;= 0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_mini_lambda--1-ValueError]" time="0.004243612289428711"><system-out>Error validating field [x=-1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;x &gt;= 0&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_builtin-0-True]" time="0.003064393997192383"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_builtin-100-True]" time="0.003020763397216797"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_builtin-foo-TypeError]" time="0.0032892227172851562"><system-out>Error validating input [x=foo] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;greater_than_0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_builtin-1.0-TypeError]" time="0.003065347671508789"><system-out>Error validating input [x=1.0] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;greater_than_0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_builtin--1-ValueError]" time="0.0037164688110351562"><system-out>Error validating input [x=-1] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;greater_than_0&apos;: &apos;TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: [-1]&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_mini_lambda-0-True]" time="0.004872322082519531"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_mini_lambda-100-True]" time="0.003129243850708008"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_mini_lambda-foo-TypeError]" time="0.002715587615966797"><system-out>Error validating input [x=foo] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;x &gt;= 0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_mini_lambda-1.0-TypeError]" time="0.0035533905029296875"><system-out>Error validating input [x=1.0] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;x &gt;= 0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_mini_lambda--1-ValueError]" time="0.003864765167236328"><system-out>Error validating input [x=-1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;x &gt;= 0&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[inline_validate-0-True]" time="0.0029914379119873047"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[inline_validate-100-True]" time="0.0020401477813720703"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[inline_validate-foo-TypeError]" time="0.002015352249145508"><system-out>Error validating [x=foo]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[inline_validate-1.0-TypeError]" time="0.002976655960083008"><system-out>Error validating [x=1.0]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[inline_validate--1-ValueError]" time="0.002983570098876953"><system-out>Error validating [x=-1]. TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: [-1].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_builtin-0-True]" time="0.003214120864868164"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_builtin-100-True]" time="0.0030562877655029297"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_builtin-foo-TypeError]" time="0.003366708755493164"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;greater_than_0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_builtin-1.0-TypeError]" time="0.0037200450897216797"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;greater_than_0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_builtin--1-ValueError]" time="0.0036699771881103516"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;greater_than_0&apos;: &apos;TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: [-1]&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_mini_lambda-0-True]" time="0.003270864486694336"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_mini_lambda-100-True]" time="0.0024220943450927734"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_mini_lambda-foo-TypeError]" time="0.0042073726654052734"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;x &gt;= 0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_mini_lambda-1.0-TypeError]" time="0.003950834274291992"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;x &gt;= 0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_mini_lambda--1-ValueError]" time="0.0035054683685302734"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;x &gt;= 0&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[with_validator-0-True]" time="0.0023801326751708984"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[with_validator-100-True]" time="0.002470254898071289"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[with_validator-foo-TypeError]" time="0.003049135208129883"><system-out>Error validating [x=foo]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[with_validator-1.0-TypeError]" time="0.002973794937133789"><system-out>Error validating [x=1.0]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[with_validator--1-ValueError]" time="0.002634763717651367"><system-out>Error validating [x=-1]: validation function [v.alid = x &gt;= 0] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_builtin_stdlib-0-True]" time="0.002944469451904297"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_builtin_stdlib-100-True]" time="0.004108905792236328"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_builtin_stdlib-foo-TypeError]" time="0.004065036773681641"><system-out>Error validating field [x=foo] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;greater_than_0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_builtin_stdlib-1.0-TypeError]" time="0.0036275386810302734"><system-out>Error validating field [x=1.0] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;greater_than_0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_builtin_stdlib--1-ValueError]" time="0.003373861312866211"><system-out>Error validating field [x=-1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;greater_than_0&apos;: &apos;TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: [-1]&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_builtin-0-True]" time="0.0033125877380371094"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_builtin-100-True]" time="0.002819061279296875"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_builtin-foo-TypeError]" time="0.0035142898559570312"><system-out>Error validating input [x=foo] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;greater_than_0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_builtin-1.0-TypeError]" time="0.003279447555541992"><system-out>Error validating input [x=1.0] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;greater_than_0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_builtin--1-ValueError]" time="0.004508495330810547"><system-out>Error validating input [x=-1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;greater_than_0&apos;: &apos;TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: [-1]&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_mini_lambda-0-True]" time="0.0031921863555908203"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_mini_lambda-100-True]" time="0.003015279769897461"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_mini_lambda-foo-TypeError]" time="0.003402233123779297"><system-out>Error validating input [x=foo] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;x &gt;= 0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_mini_lambda-1.0-TypeError]" time="0.004045248031616211"><system-out>Error validating input [x=1.0] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;x &gt;= 0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_mini_lambda--1-ValueError]" time="0.004590749740600586"><system-out>Error validating input [x=-1] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;x &gt;= 0&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_builtin_stdlib-foo-True]" time="0.0029244422912597656"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_builtin_stdlib-foo_123-True]" time="0.002762317657470703"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_builtin_stdlib-1.1-TypeError]" time="0.003777027130126953"><system-out>Error validating field [s=1.1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1]&quot;, &apos;length_greater_than_1&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;islower&apos;: &quot;TypeError: descriptor &apos;islower&apos; requires a &apos;str&apos; object but received a &apos;float&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_builtin_stdlib--ValueError]" time="0.0041425228118896484"><system-out>Error validating field [s=] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value []. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;] / Failures: {&apos;length_greater_than_1&apos;: &apos;TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: []&apos;, &apos;islower&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_builtin_stdlib-fOO-ValueError]" time="0.003941774368286133"><system-out>Error validating field [s=fOO] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value [fOO]. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;, &apos;length_greater_than_1&apos;] / Failures: {&apos;islower&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_mini_lambda-foo-True]" time="0.003281116485595703"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_mini_lambda-foo_123-True]" time="0.0034656524658203125"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_mini_lambda-1.1-TypeError]" time="0.004314899444580078"><system-out>Error validating input [s=1.1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1]&quot;, &apos;len(s) &gt; 0&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;s.islower()&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;islower&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_mini_lambda--ValueError]" time="0.003903627395629883"><system-out>Error validating input [s=&apos;&apos;] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value []. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;] / Failures: {&apos;len(s) &gt; 0&apos;: &apos;False&apos;, &apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_mini_lambda-fOO-ValueError]" time="0.0025975704193115234"><system-out>Error validating input [s=fOO] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [fOO]. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;, &apos;len(s) &gt; 0&apos;] / Failures: {&apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_builtin_stdlib-foo-True]" time="0.0028467178344726562"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_builtin_stdlib-foo_123-True]" time="0.002740621566772461"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_builtin_stdlib-1.1-TypeError]" time="0.0030107498168945312"><system-out>Error validating input [s=1.1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1]&quot;, &apos;length_greater_than_1&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;islower&apos;: &quot;TypeError: descriptor &apos;islower&apos; requires a &apos;str&apos; object but received a &apos;float&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_builtin_stdlib--ValueError]" time="0.0038204193115234375"><system-out>Error validating input [s=&apos;&apos;] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value []. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;] / Failures: {&apos;length_greater_than_1&apos;: &apos;TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: []&apos;, &apos;islower&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_builtin_stdlib-fOO-ValueError]" time="0.003166675567626953"><system-out>Error validating input [s=fOO] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value [fOO]. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;, &apos;length_greater_than_1&apos;] / Failures: {&apos;islower&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_3-foo-True]" time="0.002073526382446289"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_3-foo_123-True]" time="0.001984834671020508"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_3-1.1-TypeError]" time="0.0021486282348632812"><system-out>Error validating [s=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_3--ValueError]" time="0.004313468933105469"><system-out>Error validating [s=&apos;&apos;]. TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: [].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_3-fOO-ValueError]" time="0.0024688243865966797"><system-out>Error validating [s=fOO]: validation function [txt.islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_2-foo-True]" time="0.0019884109497070312"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_2-foo_123-True]" time="0.0019540786743164062"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_2-1.1-TypeError]" time="0.0020799636840820312"><system-out>Error validating [s=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_2--ValueError]" time="0.0023200511932373047"><system-out>Error validating [s=&apos;&apos;]. TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: [].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_2-fOO-ValueError]" time="0.002664327621459961"><system-out>Error validating [s=fOO]: validation function [islower] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_mini_lambda-foo-True]" time="0.0030324459075927734"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_mini_lambda-foo_123-True]" time="0.0029153823852539062"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_mini_lambda-1.1-TypeError]" time="0.004477977752685547"><system-out>Error validating field [s=1.1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1]&quot;, &apos;len(s) &gt; 0&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;s.islower()&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;islower&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_mini_lambda--ValueError]" time="0.0038754940032958984"><system-out>Error validating field [s=] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value []. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;] / Failures: {&apos;len(s) &gt; 0&apos;: &apos;False&apos;, &apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_mini_lambda-fOO-ValueError]" time="0.0034978389739990234"><system-out>Error validating field [s=fOO] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [fOO]. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;, &apos;len(s) &gt; 0&apos;] / Failures: {&apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_1-foo-True]" time="0.0018508434295654297"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_1-foo_123-True]" time="0.0018274784088134766"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_1-1.1-TypeError]" time="0.002038240432739258"><system-out>Error validating [s=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_1--ValueError]" time="0.0024175643920898438"><system-out>Error validating [s=&apos;&apos;]. TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: [].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_1-fOO-ValueError]" time="0.002881288528442383"><system-out>Error validating [s=fOO]. NotEqual: x == foo does not hold for x=fOO. Wrong value: [fOO].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[with_validator-foo-True]" time="0.0019981861114501953"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[with_validator-foo_123-True]" time="0.0019981861114501953"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[with_validator-1.1-TypeError]" time="0.002476215362548828"><system-out>Error validating [s=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[with_validator--ValueError]" time="0.0027420520782470703"><system-out>Error validating [s=&apos;&apos;]: validation function [v.alid = (len(s) &gt; 0) and s.islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[with_validator-fOO-ValueError]" time="0.0023729801177978516"><system-out>Error validating [s=fOO]: validation function [v.alid = (len(s) &gt; 0) and s.islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="46" name="test_example_2_regexp[foo@bar.com-True]" time="0.0025424957275390625"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="46" name="test_example_2_regexp[a@a@s-ValueError]" time="0.0021779537200927734"><system-out>Error validating [s=a@a@s]: validation function [&lt;lambda&gt;] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0.2, &apos;foo&apos;)-True]" time="0.002060413360595703"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(1.0, &apos;abc&apos;)-True]" time="0.0018477439880371094"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0, &apos;foo&apos;)-True]" time="0.0020439624786376953"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.002760648727416992"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=1.1]. Validation function [v.alid = custom(t)] raised HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0024809837341308594"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(0.2, &apos;foo&apos;, True)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.002525806427001953"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [v.alid = custom(t)] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002054452896118164"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(1.1, &apos;foo&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0024132728576660156"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(1.0, False)]. Validation function [v.alid = custom(t)] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0023651123046875"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(0.5, &apos;a&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0028083324432373047"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(0.2, &apos;foo&apos;)-True]" time="0.004790782928466797"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(1.0, &apos;abc&apos;)-True]" time="0.0038220882415771484"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(0, &apos;foo&apos;)-True]" time="0.004056215286254883"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.004954338073730469"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=1.1]. Validation function [v.alid = custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005319118499755859"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [v.alid = custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005242824554443359"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [v.alid = custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004441976547241211"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=(1.1, &apos;foo&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005490303039550781"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=(1.0, False)]. Validation function [v.alid = custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004511594772338867"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=(0.5, &apos;a&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004309892654418945"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(0.2, &apos;foo&apos;)-True]" time="0.004521369934082031"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(1.0, &apos;abc&apos;)-True]" time="0.0032401084899902344"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(0, &apos;foo&apos;)-True]" time="0.0032863616943359375"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.003937721252441406"><system-out>Error validating field [t=1.1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1]&quot;, &apos;len(t) == 2&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;instance_of(t[0], Real)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;instance_of(t[1], str)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;len(t[1]) == 3&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;t[1].islower()&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0037713050842285156"><system-out>Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.2, &apos;foo&apos;, True)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;len(t) == 2&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004171848297119141"><system-out>Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(&apos;1.0&apos;, &apos;foo&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;instance_of(t[0], Real)&apos;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0]&quot;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003447294235229492"><system-out>Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(1.1, &apos;foo&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.016993284225463867"><system-out>Error validating field [t=(1.0, False)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(1.0, False)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;] / Failures: {&apos;instance_of(t[1], str)&apos;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False]&quot;, &apos;len(t[1]) == 3&apos;: &quot;TypeError: object of type &apos;bool&apos; has no len()&quot;, &apos;t[1].islower()&apos;: &quot;AttributeError: &apos;bool&apos; object has no attribute &apos;islower&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004285573959350586"><system-out>Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.5, &apos;a&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;len(t[1]) == 3&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005392313003540039"><system-out>Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.5, &apos;AAA&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;] / Failures: {&apos;t[1].islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.002565145492553711"><system-out>calling function class_fields_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.0025451183319091797"><system-out>calling function class_fields_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.002629518508911133"><system-out>calling function class_fields_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0031197071075439453"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=1.1] for class [Foo]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0029900074005126953"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.00313568115234375"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002845287322998047"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0030176639556884766"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(1.0, False)] for class [Foo]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003407001495361328"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0029754638671875"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.004402637481689453"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.004663944244384766"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.00554203987121582"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.005506038665771484"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=1.1] for class [Foo]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005368232727050781"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004278898239135742"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005239725112915039"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005608797073364258"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=(1.0, False)] for class [Foo]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0049054622650146484"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0049648284912109375"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.0051462650299072266"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.005825042724609375"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.005226850509643555"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.005608558654785156"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=1.1] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006207942962646484"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006077289581298828"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005602121353149414"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0061092376708984375"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=(1.0, False)] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005684375762939453"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005952358245849609"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.002870798110961914"><system-out>calling function class_fields_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.002803325653076172"><system-out>calling function class_fields_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0016872882843017578"><system-out>calling function class_fields_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0030717849731445312"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=1.1] for class [Foo]. Validation function [check_valid_tuple] raised TypeError: item should be a tuple.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003232240676879883"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [check_valid_tuple] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003024578094482422"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [check_valid_tuple] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004115104675292969"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]. Validation function [check_valid_tuple] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0031888484954833984"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(1.0, False)] for class [Foo]. Validation function [check_valid_tuple] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0034449100494384766"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0028619766235351562"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.002123117446899414"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.001964092254638672"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0019154548645019531"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0023598670959472656"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=1.1]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0020945072174072266"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(0.2, &apos;foo&apos;, True)]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.002389669418334961"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0023369789123535156"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(1.1, &apos;foo&apos;)]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0024771690368652344"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(1.0, False)]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002652883529663086"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(0.5, &apos;a&apos;)]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0019500255584716797"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.004032135009765625"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.003996849060058594"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.0038309097290039062"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.00552058219909668"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=1.1]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004647731781005859"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004762172698974609"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002570629119873047"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=(1.1, &apos;foo&apos;)]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004825592041015625"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=(1.0, False)]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004220008850097656"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=(0.5, &apos;a&apos;)]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004206180572509766"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.004575490951538086"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.004431247711181641"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.00464940071105957"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.005553007125854492"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=1.1]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005110263824462891"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0053558349609375"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004956245422363281"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005320310592651367"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=(1.0, False)]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004743099212646484"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=(0.5, &apos;a&apos;)]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004822254180908203"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.0019421577453613281"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.0019588470458984375"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0016317367553710938"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.002290964126586914"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=1.1]. Validation function [check_valid_tuple] raised TypeError: item should be a tuple.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0022606849670410156"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [check_valid_tuple] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.002269744873046875"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [check_valid_tuple] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0023398399353027344"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [check_valid_tuple] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0023038387298583984"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(1.0, False)]. Validation function [check_valid_tuple] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0023882389068603516"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(0.5, &apos;a&apos;)]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0022842884063720703"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.0027472972869873047"><system-out>calling function function_input_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.0026099681854248047"><system-out>calling function function_input_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0024924278259277344"><system-out>calling function function_input_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.002934694290161133"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=1.1] for function [my_function]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002823352813720703"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.002901792526245117"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0028350353240966797"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0033807754516601562"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0025110244750976562"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0027942657470703125"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.00455164909362793"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.004459381103515625"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.004498481750488281"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.004942655563354492"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=1.1] for function [my_function]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005155086517333984"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0050928592681884766"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0049860477447509766"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005185842514038086"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0047152042388916016"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00670623779296875"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.004775285720825195"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.005053997039794922"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.0050830841064453125"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.005411863327026367"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=1.1] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006201744079589844"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006482124328613281"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005318641662597656"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006051301956176758"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006845951080322266"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0053751468658447266"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.002588510513305664"><system-out>calling function function_input_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.00258636474609375"><system-out>calling function function_input_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0024929046630859375"><system-out>calling function function_input_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.002569913864135742"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=1.1] for function [my_function]. Validation function [check_valid_tuple] raised TypeError: item should be a tuple.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003231525421142578"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [check_valid_tuple] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0028541088104248047"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [check_valid_tuple] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0029113292694091797"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]. Validation function [check_valid_tuple] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.002996683120727539"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [check_valid_tuple] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003549814224243164"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.008002996444702148"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(0.2, &apos;foo&apos;)-True]" time="0.012449502944946289"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(1.0, &apos;abc&apos;)-True]" time="0.005410909652709961"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(0, &apos;foo&apos;)-True]" time="0.007984399795532227"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0061588287353515625"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=1.1]. Validation function [custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005913734436035156"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005286216735839844"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0047681331634521484"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [custom(t)] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005573749542236328"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=(1.0, False)]. Validation function [custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005032062530517578"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=(0.5, &apos;a&apos;)]. Validation function [custom(t)] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0046956539154052734"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [custom(t)] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0.2, &apos;foo&apos;)-True]" time="0.001983642578125"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(1.0, &apos;abc&apos;)-True]" time="0.002003192901611328"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0, &apos;foo&apos;)-True]" time="0.00193023681640625"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.002378702163696289"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=1.1]. Validation function [custom(t)] raised TypeError: item should be a tuple.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002536773681640625"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [custom(t)] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0022525787353515625"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [custom(t)] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0024187564849853516"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [custom(t)] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.002376556396484375"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(1.0, False)]. Validation function [custom(t)] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002337932586669922"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(0.5, &apos;a&apos;)]. Validation function [custom(t)] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0026438236236572266"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [custom(t)] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(0.2, &apos;foo&apos;)-True]" time="0.002591848373413086"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(1.0, &apos;abc&apos;)-True]" time="0.0029392242431640625"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(0, &apos;foo&apos;)-True]" time="0.002839326858520508"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0032448768615722656"><system-out>Error validating input [t=1.1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1]&quot;, &apos;length_equals_2&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0034728050231933594"><system-out>Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.2, &apos;foo&apos;, True)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;] / Failures: {&apos;length_equals_2&apos;: &quot;WrongLength: len(x) == 2 does not hold for x=(0.2, &apos;foo&apos;, True). Wrong value: [(0.2, &apos;foo&apos;, True)]&quot;, &quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;Failure: Wrong value: [on_each_: x does not have the same number of elements than validation_functions_collection.]&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006995439529418945"><system-out>Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;, between_0_and_1)] raised [AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [] / Failures: {&quot;instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class \&apos;numbers.Real\&apos;&gt;. Wrong value: [1.0]&quot;, \&apos;between_0_and_1\&apos;: \&apos;TypeError: unorderable types: int() &lt;= str()\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0037088394165039062"><system-out>Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;, between_0_and_1)] raised [AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [&quot;instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;&quot;] / Failures: {\&apos;between_0_and_1\&apos;: \&apos;NotInRange: 0 &lt;= x &lt;= 1 does not hold for x=1.1. Wrong value: [1.1]\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0036287307739257812"><system-out>Error validating input [t=(1.0, False)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value [False]. Successes: [] / Failures: {&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class \&apos;str\&apos;&gt;. Wrong value: [False]&quot;, \&apos;length_equals_3\&apos;: &quot;TypeError: object of type \&apos;bool\&apos; has no len()&quot;, \&apos;islower\&apos;: &quot;TypeError: descriptor \&apos;islower\&apos; requires a \&apos;str\&apos; object but received a \&apos;bool\&apos;&quot;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003991842269897461"><system-out>Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value [a]. Successes: [&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;, \&apos;islower\&apos;] / Failures: {\&apos;length_equals_3\&apos;: \&apos;WrongLength: len(x) == 3 does not hold for x=a. Wrong value: [a]\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003503561019897461"><system-out>Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value [AAA]. Successes: [&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;, \&apos;length_equals_3\&apos;] / Failures: {\&apos;islower\&apos;: \&apos;False\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(0.2, &apos;foo&apos;)-True]" time="0.002428293228149414"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(1.0, &apos;abc&apos;)-True]" time="0.0020761489868164062"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(0, &apos;foo&apos;)-True]" time="0.002668619155883789"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0022630691528320312"><system-out>Error validating [t=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0028984546661376953"><system-out>Error validating [t=(0.2, &apos;foo&apos;, True)]: validation function [v.alid = len(t) == 2 \] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.00209808349609375"><system-out>Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0015416145324707031"><system-out>Error validating [t=(1.1, &apos;foo&apos;)]: validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0034987926483154297"><system-out>Error validating [t=(1.0, False)]. Validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \ ; and instance_of(t[1], str) and len(t[1]) == 3 and t[1].islower()] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0020902156829833984"><system-out>Error validating [t=(0.5, &apos;a&apos;)]: validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \ ; and instance_of(t[1], str) and len(t[1]) == 3 and t[1].islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0015230178833007812"><system-out>Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \ ; and instance_of(t[1], str) and len(t[1]) == 3 and t[1].islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(0.2, &apos;foo&apos;)-True]" time="0.0018932819366455078"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(1.0, &apos;abc&apos;)-True]" time="0.0013968944549560547"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(0, &apos;foo&apos;)-True]" time="0.0024611949920654297"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0030481815338134766"><system-out>Error validating [t=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0022122859954833984"><system-out>Error validating [t=(0.2, &apos;foo&apos;, True)]. WrongLength: len(x) == 2 does not hold for x=(0.2, &apos;foo&apos;, True). Wrong value: [(0.2, &apos;foo&apos;, True)].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0020215511322021484"><system-out>Error validating [t[0]=1.0]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002220630645751953"><system-out>Error validating [t[0]=1.1]. TooBig: x &lt;= 1 does not hold for x=1.1. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.002553701400756836"><system-out>Error validating [t[1]=False]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0035581588745117188"><system-out>Error validating [t[1]=a]. WrongLength: len(x) == 3 does not hold for x=a. Wrong value: [a].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002431154251098633"><system-out>Error validating [t[1]=AAA]: validation function [islower] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(0.2, &apos;foo&apos;)-True]" time="0.0019960403442382812"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(1.0, &apos;abc&apos;)-True]" time="0.00179290771484375"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(0, &apos;foo&apos;)-True]" time="0.0017871856689453125"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.002819061279296875"><system-out>Error validating [t=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0020394325256347656"><system-out>Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t))] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.002712249755859375"><system-out>Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0]))] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0028781890869140625"><system-out>Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0])) ; if not (0 &lt;= t[0] &lt;= 1): ; raise ValueError(&apos;first elt should be between 0 and 1,found &apos; + str(t[0]))] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.002925395965576172"><system-out>Error validating [t=(1.0, False)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0])) ; if not (0 &lt;= t[0] &lt;= 1): ; raise ValueError(&apos;first elt should be between 0 and 1,found &apos; + str(t[0])) ;  ; # the second element is a lowercase string of size 3 ; if not isinstance(t[1], str): ; raise TypeError(&apos;second elt should be a string, found &apos; + str(t[1]))] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0018928050994873047"><system-out>Error validating [t=(0.5, &apos;a&apos;)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0])) ; if not (0 &lt;= t[0] &lt;= 1): ; raise ValueError(&apos;first elt should be between 0 and 1,found &apos; + str(t[0])) ;  ; # the second element is a lowercase string of size 3 ; if not isinstance(t[1], str): ; raise TypeError(&apos;second elt should be a string, found &apos; + str(t[1])) ; if not (len(t[1]) == 3 and t[1].islower()): ; raise ValueError(&apos;second elt should be a lowercase string of length 3,&apos; ; &apos;found &apos; + str(t[1]))] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0019142627716064453"><system-out>Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0])) ; if not (0 &lt;= t[0] &lt;= 1): ; raise ValueError(&apos;first elt should be between 0 and 1,found &apos; + str(t[0])) ;  ; # the second element is a lowercase string of size 3 ; if not isinstance(t[1], str): ; raise TypeError(&apos;second elt should be a string, found &apos; + str(t[1])) ; if not (len(t[1]) == 3 and t[1].islower()): ; raise ValueError(&apos;second elt should be a lowercase string of length 3,&apos; ; &apos;found &apos; + str(t[1]))] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(0.2, &apos;foo&apos;)-True]" time="0.0024347305297851562"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(1.0, &apos;abc&apos;)-True]" time="0.002274751663208008"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(0, &apos;foo&apos;)-True]" time="0.0048656463623046875"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.003696441650390625"><system-out>Error validating field [t=1.1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1]&quot;, &apos;length_equals_2&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004175662994384766"><system-out>Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.2, &apos;foo&apos;, True)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;] / Failures: {&apos;length_equals_2&apos;: &quot;WrongLength: len(x) == 2 does not hold for x=(0.2, &apos;foo&apos;, True). Wrong value: [(0.2, &apos;foo&apos;, True)]&quot;, &quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;Failure: Wrong value: [on_each_: x does not have the same number of elements than validation_functions_collection.]&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.002460002899169922"><system-out>Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;, between_0_and_1)] raised [AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [] / Failures: {&quot;instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class \&apos;numbers.Real\&apos;&gt;. Wrong value: [1.0]&quot;, \&apos;between_0_and_1\&apos;: \&apos;TypeError: unorderable types: int() &lt;= str()\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0037572383880615234"><system-out>Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;, between_0_and_1)] raised [AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [&quot;instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;&quot;] / Failures: {\&apos;between_0_and_1\&apos;: \&apos;NotInRange: 0 &lt;= x &lt;= 1 does not hold for x=1.1. Wrong value: [1.1]\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0034554004669189453"><system-out>Error validating field [t=(1.0, False)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value [False]. Successes: [] / Failures: {&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class \&apos;str\&apos;&gt;. Wrong value: [False]&quot;, \&apos;length_equals_3\&apos;: &quot;TypeError: object of type \&apos;bool\&apos; has no len()&quot;, \&apos;islower\&apos;: &quot;TypeError: descriptor \&apos;islower\&apos; requires a \&apos;str\&apos; object but received a \&apos;bool\&apos;&quot;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0030546188354492188"><system-out>Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value [a]. Successes: [&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;, \&apos;islower\&apos;] / Failures: {\&apos;length_equals_3\&apos;: \&apos;WrongLength: len(x) == 3 does not hold for x=a. Wrong value: [a]\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0028162002563476562"><system-out>Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value [AAA]. Successes: [&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;, \&apos;length_equals_3\&apos;] / Failures: {\&apos;islower\&apos;: \&apos;False\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(0.2, &apos;foo&apos;)-True]" time="0.0034723281860351562"><system-out>uncomment and put your breakpoint here to debug
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(1.0, &apos;abc&apos;)-True]" time="0.0023698806762695312"><system-out>uncomment and put your breakpoint here to debug
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(0, &apos;foo&apos;)-True]" time="0.0030927658081054688"><system-out>uncomment and put your breakpoint here to debug
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.002979278564453125"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=1.1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1]&quot;, &apos;len(t) == 2&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;instance_of(t[0], Real)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;instance_of(t[1], str)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;len(t[1]) == 3&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;t[1].islower()&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003670930862426758"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.2, &apos;foo&apos;, True)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;len(t) == 2&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003961086273193359"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(&apos;1.0&apos;, &apos;foo&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;instance_of(t[0], Real)&apos;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0]&quot;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004053592681884766"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(1.1, &apos;foo&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0037229061126708984"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(1.0, False)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;] / Failures: {&apos;instance_of(t[1], str)&apos;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False]&quot;, &apos;len(t[1]) == 3&apos;: &quot;TypeError: object of type &apos;bool&apos; has no len()&quot;, &apos;t[1].islower()&apos;: &quot;AttributeError: &apos;bool&apos; object has no attribute &apos;islower&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003412485122680664"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.5, &apos;a&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;len(t[1]) == 3&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0030498504638671875"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.5, &apos;AAA&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;] / Failures: {&apos;t[1].islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="7" name="test_is_in" time="0.0020613670349121094"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="15" name="test_contains" time="0.001119852066040039"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="22" name="test_is_subset_is_superset" time="0.0015604496002197266"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="45" name="test_on_all" time="0.00109100341796875"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="54" name="test_on_each" time="0.0011034011840820312"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="63" name="test_haslen" time="0.0014445781707763672"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="70" name="test_minlen" time="0.0015773773193359375"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="77" name="test_minlens" time="0.0015041828155517578"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="84" name="test_maxlen" time="0.0015554428100585938"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="91" name="test_maxlens" time="0.0016489028930664062"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="98" name="test_length_between" time="0.0012998580932617188"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="110" name="test_numpy_nan_like_lengths" time="0.0012178421020507812"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_comparables" file="valid8/tests/validation_lib/test_validators_comparables.py" line="5" name="test_gt" time="0.0012235641479492188"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_comparables" file="valid8/tests/validation_lib/test_validators_comparables.py" line="12" name="test_gts" time="0.0010936260223388672"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_comparables" file="valid8/tests/validation_lib/test_validators_comparables.py" line="19" name="test_lt" time="0.0011589527130126953"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_comparables" file="valid8/tests/validation_lib/test_validators_comparables.py" line="26" name="test_lts" time="0.0012476444244384766"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_comparables" file="valid8/tests/validation_lib/test_validators_comparables.py" line="33" name="test_between" time="0.001745462417602539"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_comparables" file="valid8/tests/validation_lib/test_validators_comparables.py" line="45" name="test_numpy_nan" time="0.0016887187957763672"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_numbers" file="valid8/tests/validation_lib/test_validators_numbers.py" line="5" name="test_is_even" time="0.001150369644165039"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_numbers" file="valid8/tests/validation_lib/test_validators_numbers.py" line="11" name="test_is_odd" time="0.0012814998626708984"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_numbers" file="valid8/tests/validation_lib/test_validators_numbers.py" line="17" name="test_is_multiple_of" time="0.001277923583984375"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_types" file="valid8/tests/validation_lib/test_validators_types.py" line="5" name="test_instance_of" time="0.0017468929290771484"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_types" file="valid8/tests/validation_lib/test_validators_types.py" line="31" name="test_subclass_of" time="0.0014843940734863281"></testcase></testsuite>