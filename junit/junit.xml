<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="1" name="pytest" skips="0" tests="20" time="0.560"><testcase classname="valid8.tests.test_readme" file="valid8/tests/test_readme.py" line="7" name="test_first_example_enforce" time="0.007921695709228516"><system-out>you did it !
you did it !
</system-out></testcase><testcase classname="valid8.tests.test_readme" file="valid8/tests/test_readme.py" line="41" name="test_first_example_pytypes" time="0.014519691467285156"><failure message="pytypes.exceptions.InputTypeError: 
  valid8.tests.test_readme.build_house
  called with incompatible types:
Expected: Tuple[str, Real, Union[Integral, NoneType], Boolean]
Received: Tuple[str, int, int, int]">def test_first_example_pytypes():
        # for type checking
        from valid8 import Boolean
        from numbers import Real, Integral
        from typing import Optional
        from pytypes import typechecked
    
        # for value checking
        from valid8 import validate, minlens, gt
    
        @typechecked
        @validate(name=minlens(0),
                  surface=gt(0))
        def build_house(name: str,
                        surface: Real,
                        nb_floors: Optional[Integral] = 1,
                        with_windows: Boolean = False):
            print(&apos;you did it !&apos;)
    
&gt;       build_house(&apos;test&apos;, 12, 2)  # validation OK

valid8/tests/test_readme.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../virtualenv/python3.5.3/lib/python3.5/site-packages/pytypes/typechecker.py:825: in checker_tp
    prop_getter or auto_prop_getter, specs)
../../../virtualenv/python3.5.3/lib/python3.5/site-packages/pytypes/typechecker.py:673: in _checkfunctype
    _raise_typecheck_error(msg, False, check_val, tpch, argSig, func)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

msg = &apos;\n  valid8.tests.test_readme.build_house\n  called with incompatible types:\nExpected: Tuple[str, Real, Union[Integral, NoneType], Boolean]\nReceived: Tuple[str, int, int, int]&apos;
is_return = False, value = (&apos;test&apos;, 12, 2, 1)
received_type = typing.Tuple[str, int, int, int]
expected_type = typing.Tuple[str, numbers.Real, typing.Union[numbers.Integral, NoneType], valid8.utils_typing.Boolean]
func = &lt;function test_first_example_pytypes.&lt;locals&gt;.build_house at 0x7ff2081f0950&gt;

    def _raise_typecheck_error(msg, is_return=False, value=None, received_type=None,
                expected_type=None, func=None):
        if pytypes.warning_mode:
            import traceback
            tb = traceback.extract_stack()
            off = util._calc_traceback_list_offset(tb)
            cat = pytypes.ReturnTypeWarning if is_return else pytypes.InputTypeWarning
            warn_explicit(msg, cat, tb[off][0], tb[off][1])
    # 		if not func is None:
    # 			warn_explicit(msg, cat, func.__code__.co_filename,
    # 					func.__code__.co_firstlineno, func.__module__)
    # 		else:
    # 			warn(msg, pytypes.ReturnTypeWarning)
        else:
            if is_return:
                raise pytypes.ReturnTypeError(msg)
            else:
&gt;               raise pytypes.InputTypeError(msg)
E               pytypes.exceptions.InputTypeError: 
E                 valid8.tests.test_readme.build_house
E                 called with incompatible types:
E               Expected: Tuple[str, Real, Union[Integral, NoneType], Boolean]
E               Received: Tuple[str, int, int, int]

../../../virtualenv/python3.5.3/lib/python3.5/site-packages/pytypes/type_util.py:1446: InputTypeError</failure></testcase><testcase classname="valid8.tests.test_readme" file="valid8/tests/test_readme.py" line="73" name="test_custom_validators" time="0.0027680397033691406"></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="328" name="test_decorate_manually" time="0.0017788410186767578"></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="238" name="test_validate_and" time="0.0017998218536376953"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="48" name="test_validate_custom" time="0.003048419952392578"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="41" name="test_validate_empty" time="0.001779794692993164"></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="88" name="test_validate_enforce" time="0.003694295883178711"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="273" name="test_validate_is_in" time="0.0018758773803710938"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="126" name="test_validate_name_error" time="0.0022649765014648438"></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="133" name="test_validate_none_is_allowed" time="0.0024085044860839844"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="142" name="test_validate_not_not_all" time="0.00673365592956543"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="308" name="test_validate_on_all" time="0.0018024444580078125"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="318" name="test_validate_on_each" time="0.003728151321411133"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="171" name="test_validate_or" time="0.0033791065216064453"><system-out>hello
hello
hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="107" name="test_validate_pytypes" time="0.008685588836669922"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="11" name="test_validate_simple" time="0.0030202865600585938"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="285" name="test_validate_subset_superset" time="0.0018246173858642578"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="34" name="test_validate_wrong_notnone" time="0.0012776851654052734"></testcase><testcase classname="valid8.tests.test_validate.TestValidate" file="valid8/tests/test_validate.py" line="205" name="test_validate_xor" time="0.0030705928802490234"><system-out>hello
hello
hello
</system-out></testcase></testsuite>