<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="1" name="pytest" skips="1" tests="432" time="3.830"><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="6" name="test_empty_validators_list" time="0.0022668838500976562"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="13" name="test_either_single_list_or_several_items" time="0.0014770030975341797"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="20" name="test_list_implicit_and" time="0.0018820762634277344"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="26" name="test_not_not_all" time="0.0030014514923095703"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="60" name="test_validate_or" time="0.0018475055694580078"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="90" name="test_validate_xor" time="0.0017437934875488281"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="118" name="test_validate_and" time="0.0017936229705810547"></testcase><testcase classname="valid8.tests.test_entry_points" file="valid8/tests/test_entry_points.py" line="3" name="test_validate_create_manually" time="0.0023953914642333984"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="9" name="test_validate_field" time="0.003332376480102539"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="55" name="test_validate_field_property" time="0.0032129287719726562"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="106" name="test_validate_field_custom_type" time="0.005038022994995117"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="146" name="test_validate_attr" time="0.0033321380615234375"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="158" name="test_validate_arg_nominal_builtin_validators" time="0.004950284957885742"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="188" name="test_validate_out" time="0.004223346710205078"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="205" name="test_validate_nominal_builtin_validators" time="0.004767894744873047"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="235" name="test_validate_custom_validators_basic" time="0.004854440689086914"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="283" name="test_validate_custom_validators_with_exception" time="0.004109859466552734"><system-out>hello
1
2
3
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="336" name="test_validate_mini_lambda" time="0.0030298233032226562"><system-out>Hello, john your age is 20
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="349" name="test_validate_none_enforce" time="0.020900249481201172"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="373" name="test_validate_none_pytypes" time="0.01236867904663086"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="397" name="test_validate_none_is_allowed" time="0.002494335174560547"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="409" name="test_validate_name_error" time="0.0015339851379394531"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="418" name="test_decorate_manually" time="0.0026314258575439453"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="430" name="test_validate_tracebacks" time="0.003242969512939453"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="12" name="test_validate_" time="0.002303600311279297"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="39" name="test_readme_usage_validate__customization" time="0.002567768096923828"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="74" name="test_validator_context_manager" time="0.002702951431274414"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="105" name="test_readme_usage_validator_customization" time="0.0027337074279785156"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="142" name="test_validate_tracebacks" time="0.0024733543395996094"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="162" name="test_typos_in_kwargs" time="0.001489400863647461"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="170" name="test_validate_auto_disable_display" time="0.0017819404602050781"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="189" name="test_numpy_nan" time="0.0016715526580810547"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="198" name="test_numpy_nan_like_lengths" time="0.0015254020690917969"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="232" name="test_empty_not_empty" time="0.002081632614135742"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="246" name="test_function_setter_name_in_valid8_error_message" time="0.023572206497192383"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="254" name="test_enum_isinstance" time="0.0017216205596923828"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="21" name="test_named_import[composition_and_]" time="0.002437591552734375"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="21" name="test_named_import[composition_or_]" time="0.001714468002319336"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="21" name="test_named_import[composition_xor_]" time="0.0017497539520263672"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="21" name="test_named_import[composition_XorTooManySuccess]" time="0.0016739368438720703"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="21" name="test_named_import[composition_AllValidatorsFailed]" time="0.0016951560974121094"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="21" name="test_named_import[composition_CompositionFailure]" time="0.0016548633575439453"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="21" name="test_named_import[composition_failure_raiser]" time="0.0016057491302490234"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="21" name="test_named_import[composition_AtLeastOneFailed]" time="0.0016171932220458984"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="21" name="test_named_import[composition_DidNotFail]" time="0.0019381046295166016"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="21" name="test_named_import[composition_not_]" time="0.0016336441040039062"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="21" name="test_named_import[composition_skip_on_none]" time="0.0016655921936035156"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="21" name="test_named_import[composition_fail_on_none]" time="0.0016794204711914062"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="21" name="test_named_import[composition_not_all]" time="0.0018486976623535156"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="26" name="test_import_from[composition_and_]" time="0.0018000602722167969"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="26" name="test_import_from[composition_or_]" time="0.0017611980438232422"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="26" name="test_import_from[composition_xor_]" time="0.0017848014831542969"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="26" name="test_import_from[composition_XorTooManySuccess]" time="0.0018951892852783203"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="26" name="test_import_from[composition_AllValidatorsFailed]" time="0.0018458366394042969"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="26" name="test_import_from[composition_CompositionFailure]" time="0.0017850399017333984"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="26" name="test_import_from[composition_failure_raiser]" time="0.002009868621826172"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="26" name="test_import_from[composition_AtLeastOneFailed]" time="0.0018126964569091797"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="26" name="test_import_from[composition_DidNotFail]" time="0.0018820762634277344"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="26" name="test_import_from[composition_not_]" time="0.0019049644470214844"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="26" name="test_import_from[composition_skip_on_none]" time="0.002044677734375"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="26" name="test_import_from[composition_fail_on_none]" time="0.0019102096557617188"></testcase><testcase classname="valid8.tests.pkging.test_packaging" file="valid8/tests/pkging/test_packaging.py" line="26" name="test_import_from[composition_not_all]" time="0.0018663406372070312"></testcase><testcase classname="valid8.tests.pkging.test_packaging_wildcard" file="valid8/tests/pkging/test_packaging_wildcard.py" line="3" name="test_wild_import" time="0.0013632774353027344"></testcase><testcase classname="valid8.tests.readme.test_readme_combining" file="valid8/tests/readme/test_readme_combining.py" line="7" name="test_readme_index_combining_enforce" time="0.017028093338012695"><system-out>Building house... DONE !
Building house... DONE !
</system-out></testcase><testcase classname="valid8.tests.readme.test_readme_combining" file="valid8/tests/readme/test_readme_combining.py" line="16" name="test_readme_index_combining_autoclass" time="0.008376121520996094"></testcase><testcase classname="valid8.tests.readme.test_readme_combining" file="valid8/tests/readme/test_readme_combining.py" line="48" name="test_readme_index_combining_autoclass_2" time="0.009411096572875977"></testcase><testcase classname="valid8.tests.readme.test_readme_combining" file="valid8/tests/readme/test_readme_combining.py" line="79" name="test_readme_index_combining_attrs" time="0.005406856536865234"></testcase><testcase classname="valid8.tests.readme.test_readme_combining" file="valid8/tests/readme/test_readme_combining.py" line="111" name="test_unused_pytypes" time="0.020087480545043945"><system-out>you did it !
you did it !
</system-out></testcase><testcase classname="valid8.tests.readme.test_readme_combining" file="valid8/tests/readme/test_readme_combining.py" line="140" name="test_readme_combining_checktypes" time="0.0009067058563232422"><skipped message="checktypes does not seem to work on old python versions see https://gitlab.com/yahya-abou-imran/checktypes/issues/2" type="pytest.skip">valid8/tests/readme/test_readme_combining.py:140: checktypes does not seem to work on old python versions see https://gitlab.com/yahya-abou-imran/checktypes/issues/2</skipped></testcase><testcase classname="valid8.tests.readme.test_readme_examples" file="valid8/tests/readme/test_readme_examples.py" line="7" name="test_readme_examples_4" time="0.005861997604370117"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="6" name="test_readme_index_usage_quick" time="0.0019083023071289062"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="20" name="test_readme_usage_validator" time="0.006348609924316406"><failure message="AssertionError: assert &apos;Error valida...ng value: 1j.&apos; == &apos;Error validat...ng value: 1j.&apos;
  - Error validating [surface=1j]. Validation function [assert_instance_of(surf, int)] raised HasWrongType: Value should be an instance of &lt;class &apos;int&apos;&gt;. Wrong value: 1j.
  + Error validating [surface=1j]. Validation function [assert_instance_of(surf, int) ; v.alid = surf &gt; 0] raised HasWrongType: Value should be an instance of &lt;class &apos;int&apos;&gt;. Wrong value: 1j.
  ?                                                                                  ++++++++++++++++++++">def test_readme_usage_validator():
        &quot;&quot;&quot; Tests that the example under index/usage/validation works &quot;&quot;&quot;
    
        surf = -1
    
        with pytest.raises(ValidationError) as exc_info:
            with validator(&apos;surface&apos;, surf) as v:
                v.alid = surf &gt; 0 and isfinite(surf)
        e = exc_info.value
        assert str(e) == &quot;Error validating [surface=-1]: &quot; \
                         &quot;validation function [v.alid = surf &gt; 0 and isfinite(surf)] returned [False].&quot;
    
        surf = 1j
    
        with pytest.raises(ValidationError) as exc_info:
            with validator(&apos;surface&apos;, surf) as v:
                v.alid = surf &gt; 0 and isfinite(surf)
        e = exc_info.value
        assert str(e).startswith(&quot;Error validating [surface=1j]. &quot; \
                                 &quot;Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised &quot; \
                                 &quot;TypeError:&quot;)
    
        # alternate naming
        surf = -1
        with pytest.raises(ValidationError) as exc_info:
            with validator(&apos;surface&apos;, surf) as r:
                r.esults = surf &gt; 0 and isfinite(surf)
        e = exc_info.value
        assert str(e) == &quot;Error validating [surface=-1]: &quot; \
                         &quot;validation function [r.esults = surf &gt; 0 and isfinite(surf)] returned [False].&quot;
    
        # type validation
        surf = 1j
        with pytest.raises(ValidationError) as exc_info:
            with validator(&apos;surface&apos;, surf, instance_of=int) as v:
                v.alid = surf &gt; 0
        e = exc_info.value
        assert str(e) == &quot;Error validating [surface=1j]. &quot; \
                         &quot;HasWrongType: Value should be an instance of %s. Wrong value: 1j.&quot; % repr(int)
    
        from valid8 import assert_instance_of
        with pytest.raises(ValidationError) as exc_info:
            with validator(&apos;surface&apos;, surf) as v:
                assert_instance_of(surf, int)
                v.alid = surf &gt; 0
        e = exc_info.value
&gt;       assert str(e) == &quot;Error validating [surface=1j]. &quot; \
                         &quot;Validation function [assert_instance_of(surf, int) ; v.alid = surf &gt; 0] raised &quot; \
                         &quot;HasWrongType: Value should be an instance of %s. Wrong value: 1j.&quot; % repr(int)
E       AssertionError: assert &apos;Error valida...ng value: 1j.&apos; == &apos;Error validat...ng value: 1j.&apos;
E         - Error validating [surface=1j]. Validation function [assert_instance_of(surf, int)] raised HasWrongType: Value should be an instance of &lt;class &apos;int&apos;&gt;. Wrong value: 1j.
E         + Error validating [surface=1j]. Validation function [assert_instance_of(surf, int) ; v.alid = surf &gt; 0] raised HasWrongType: Value should be an instance of &lt;class &apos;int&apos;&gt;. Wrong value: 1j.
E         ?                                                                                  ++++++++++++++++++++

valid8/tests/readme/test_readme_index.py:67: AssertionError</failure></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="71" name="test_readme_usage_customization" time="0.003518819808959961"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="130" name="test_readme_index_usage_basic" time="0.0027375221252441406"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="154" name="test_readme_index_usage_function" time="0.0048220157623291016"><system-out>Building house... DONE !
Building house... DONE !
Building house... DONE !
</system-out></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="200" name="test_readme_index_usage_class_fields" time="0.0044519901275634766"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="234" name="test_testing" time="0.002314329147338867"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="249" name="test_advanced_composition" time="0.0016634464263916016"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="268" name="test_readme_index_usage_customization" time="0.00424647331237793"></testcase><testcase classname="valid8.tests.readme.test_readme_index" file="valid8/tests/readme/test_readme_index.py" line="327" name="test_readme_index_usage_composition" time="0.0051996707916259766"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="9" name="test_tutorial" time="0.0028460025787353516"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="67" name="test_usage_base_validation_functions" time="0.0015473365783691406"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="73" name="test_usage_ensure_valid" time="0.006127595901489258"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="120" name="test_usage_is_valid" time="0.003113985061645508"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="157" name="test_usage_validators" time="0.005156278610229492"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="310" name="test_usage_validate_annotation" time="0.0031599998474121094"></testcase><testcase classname="valid8.tests.readme.test_readme_usage" file="valid8/tests/readme/test_readme_usage.py" line="326" name="test_usage_custom_validators" time="0.004388332366943359"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_builtin-0-True]" time="0.004120349884033203"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_builtin-100-True]" time="0.003200054168701172"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_builtin-foo-TypeError]" time="0.004009723663330078"><system-out>Error validating input [x=foo] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;foo&apos;&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: &apos;foo&apos;&quot;, &apos;greater_than_0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_builtin-1.0-TypeError]" time="0.004523277282714844"><system-out>Error validating input [x=1.0] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.0&gt;. Successes: [&apos;greater_than_0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: 1.0&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_builtin--1-ValueError]" time="0.0039250850677490234"><system-out>Error validating input [x=-1] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;-1&gt;. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;greater_than_0&apos;: &apos;TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: -1&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_mini_lambda-0-True]" time="0.00339508056640625"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_mini_lambda-100-True]" time="0.0033524036407470703"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_mini_lambda-foo-TypeError]" time="0.004008293151855469"><system-out>Error validating field [x=foo] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;foo&apos;&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: &apos;foo&apos;&quot;, &apos;x &gt;= 0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_mini_lambda-1.0-TypeError]" time="0.003969669342041016"><system-out>Error validating field [x=1.0] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.0&gt;. Successes: [&apos;x &gt;= 0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: 1.0&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_mini_lambda--1-ValueError]" time="0.0038900375366210938"><system-out>Error validating field [x=-1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;-1&gt;. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;x &gt;= 0&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_builtin_stdlib-0-True]" time="0.0037565231323242188"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_builtin_stdlib-100-True]" time="0.0033059120178222656"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_builtin_stdlib-foo-TypeError]" time="0.0028107166290283203"><system-out>Error validating field [x=foo] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;foo&apos;&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: &apos;foo&apos;&quot;, &apos;greater_than_0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_builtin_stdlib-1.0-TypeError]" time="0.004000425338745117"><system-out>Error validating field [x=1.0] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.0&gt;. Successes: [&apos;greater_than_0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: 1.0&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[class_field_builtin_stdlib--1-ValueError]" time="0.003974437713623047"><system-out>Error validating field [x=-1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;-1&gt;. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;greater_than_0&apos;: &apos;TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: -1&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_mini_lambda-0-True]" time="0.0032715797424316406"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_mini_lambda-100-True]" time="0.004825115203857422"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_mini_lambda-foo-TypeError]" time="0.0038650035858154297"><system-out>Error validating input [x=foo] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;foo&apos;&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: &apos;foo&apos;&quot;, &apos;x &gt;= 0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_mini_lambda-1.0-TypeError]" time="0.0038743019104003906"><system-out>Error validating input [x=1.0] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.0&gt;. Successes: [&apos;x &gt;= 0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: 1.0&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_io_mini_lambda--1-ValueError]" time="0.0039174556732177734"><system-out>Error validating input [x=-1] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;-1&gt;. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;x &gt;= 0&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_mini_lambda-0-True]" time="0.003130197525024414"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_mini_lambda-100-True]" time="0.0037229061126708984"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_mini_lambda-foo-TypeError]" time="0.003778696060180664"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;foo&apos;&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: &apos;foo&apos;&quot;, &apos;x &gt;= 0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_mini_lambda-1.0-TypeError]" time="0.0037555694580078125"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.0&gt;. Successes: [&apos;x &gt;= 0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: 1.0&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_mini_lambda--1-ValueError]" time="0.0036962032318115234"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;-1&gt;. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;x &gt;= 0&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_builtin-0-True]" time="0.0031092166900634766"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_builtin-100-True]" time="0.003327608108520508"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_builtin-foo-TypeError]" time="0.0035407543182373047"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;foo&apos;&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: &apos;foo&apos;&quot;, &apos;greater_than_0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_builtin-1.0-TypeError]" time="0.0034487247467041016"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.0&gt;. Successes: [&apos;greater_than_0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: 1.0&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_output_builtin--1-ValueError]" time="0.003559112548828125"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;-1&gt;. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;greater_than_0&apos;: &apos;TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: -1&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[with_validator-0-True]" time="0.0023458003997802734"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[with_validator-100-True]" time="0.002798795700073242"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[with_validator-foo-TypeError]" time="0.002695798873901367"><system-out>Error validating [x=foo]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: &apos;foo&apos;.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[with_validator-1.0-TypeError]" time="0.002753734588623047"><system-out>Error validating [x=1.0]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: 1.0.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[with_validator--1-ValueError]" time="0.003134012222290039"><system-out>Error validating [x=-1]: validation function [v.alid = x &gt;= 0] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_builtin-0-True]" time="0.0033588409423828125"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_builtin-100-True]" time="0.003386974334716797"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_builtin-foo-TypeError]" time="0.0047876834869384766"><system-out>Error validating input [x=foo] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;foo&apos;&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: &apos;foo&apos;&quot;, &apos;greater_than_0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_builtin-1.0-TypeError]" time="0.0037598609924316406"><system-out>Error validating input [x=1.0] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.0&gt;. Successes: [&apos;greater_than_0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: 1.0&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_builtin--1-ValueError]" time="0.0037343502044677734"><system-out>Error validating input [x=-1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;-1&gt;. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;greater_than_0&apos;: &apos;TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: -1&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_mini_lambda-0-True]" time="0.0032422542572021484"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_mini_lambda-100-True]" time="0.003289937973022461"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_mini_lambda-foo-TypeError]" time="0.0032236576080322266"><system-out>Error validating input [x=foo] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;foo&apos;&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: &apos;foo&apos;&quot;, &apos;x &gt;= 0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_mini_lambda-1.0-TypeError]" time="0.0027141571044921875"><system-out>Error validating input [x=1.0] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.0&gt;. Successes: [&apos;x &gt;= 0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: 1.0&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[function_input_mini_lambda--1-ValueError]" time="0.0030226707458496094"><system-out>Error validating input [x=-1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;-1&gt;. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;x &gt;= 0&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[inline_validate-0-True]" time="0.001863241195678711"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[inline_validate-100-True]" time="0.0019137859344482422"></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[inline_validate-foo-TypeError]" time="0.002702951431274414"><system-out>Error validating [x=foo]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: &apos;foo&apos;.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[inline_validate-1.0-TypeError]" time="0.002162456512451172"><system-out>Error validating [x=1.0]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: 1.0.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example1" file="valid8/tests/readme/examples/test_example1.py" line="23" name="test_example_1[inline_validate--1-ValueError]" time="0.002259969711303711"><system-out>Error validating [x=-1]. TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: -1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_mini_lambda-foo-True]" time="0.003417491912841797"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_mini_lambda-foo_123-True]" time="0.0034689903259277344"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_mini_lambda-1.1-TypeError]" time="0.004555702209472656"><system-out>Error validating field [s=1.1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.1&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: 1.1&quot;, &apos;len(s) &gt; 0&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;s.islower()&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;islower&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_mini_lambda--ValueError]" time="0.00405573844909668"><system-out>Error validating field [s=] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;&apos;&gt;. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;] / Failures: {&apos;len(s) &gt; 0&apos;: &apos;False&apos;, &apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_mini_lambda-fOO-ValueError]" time="0.004115104675292969"><system-out>Error validating field [s=fOO] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;fOO&apos;&gt;. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;, &apos;len(s) &gt; 0&apos;] / Failures: {&apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_builtin_stdlib-foo-True]" time="0.0032644271850585938"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_builtin_stdlib-foo_123-True]" time="0.0036377906799316406"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_builtin_stdlib-1.1-TypeError]" time="0.003771543502807617"><system-out>Error validating field [s=1.1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.1&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: 1.1&quot;, &apos;length_greater_than_1&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;islower&apos;: &quot;TypeError: descriptor &apos;islower&apos; requires a &apos;str&apos; object but received a &apos;float&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_builtin_stdlib--ValueError]" time="0.003922700881958008"><system-out>Error validating field [s=] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;&apos;&gt;. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;] / Failures: {&apos;length_greater_than_1&apos;: &quot;TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: &apos;&apos;&quot;, &apos;islower&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[class_field_builtin_stdlib-fOO-ValueError]" time="0.003858327865600586"><system-out>Error validating field [s=fOO] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;fOO&apos;&gt;. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;, &apos;length_greater_than_1&apos;] / Failures: {&apos;islower&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_3-foo-True]" time="0.003116607666015625"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_3-foo_123-True]" time="0.0024280548095703125"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_3-1.1-TypeError]" time="0.0027914047241210938"><system-out>Error validating [s=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_3--ValueError]" time="0.002775430679321289"><system-out>Error validating [s=&apos;&apos;]. TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: &apos;&apos;.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_3-fOO-ValueError]" time="0.002824544906616211"><system-out>Error validating [s=fOO]: validation function [txt.islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[with_validator-foo-True]" time="0.0023376941680908203"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[with_validator-foo_123-True]" time="0.002501964569091797"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[with_validator-1.1-TypeError]" time="0.0031898021697998047"><system-out>Error validating [s=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[with_validator--ValueError]" time="0.003909111022949219"><system-out>Error validating [s=&apos;&apos;]: validation function [v.alid = (len(s) &gt; 0) and s.islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[with_validator-fOO-ValueError]" time="0.0029299259185791016"><system-out>Error validating [s=fOO]: validation function [v.alid = (len(s) &gt; 0) and s.islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_mini_lambda-foo-True]" time="0.0036840438842773438"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_mini_lambda-foo_123-True]" time="0.0036268234252929688"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_mini_lambda-1.1-TypeError]" time="0.004820346832275391"><system-out>Error validating input [s=1.1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.1&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: 1.1&quot;, &apos;len(s) &gt; 0&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;s.islower()&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;islower&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_mini_lambda--ValueError]" time="0.0038568973541259766"><system-out>Error validating input [s=&apos;&apos;] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;&apos;&gt;. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;] / Failures: {&apos;len(s) &gt; 0&apos;: &apos;False&apos;, &apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_mini_lambda-fOO-ValueError]" time="0.003761768341064453"><system-out>Error validating input [s=fOO] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;fOO&apos;&gt;. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;, &apos;len(s) &gt; 0&apos;] / Failures: {&apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_builtin_stdlib-foo-True]" time="0.0032050609588623047"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_builtin_stdlib-foo_123-True]" time="0.005144834518432617"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_builtin_stdlib-1.1-TypeError]" time="0.0038852691650390625"><system-out>Error validating input [s=1.1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.1&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: 1.1&quot;, &apos;length_greater_than_1&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;islower&apos;: &quot;TypeError: descriptor &apos;islower&apos; requires a &apos;str&apos; object but received a &apos;float&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_builtin_stdlib--ValueError]" time="0.003866910934448242"><system-out>Error validating input [s=&apos;&apos;] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;&apos;&gt;. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;] / Failures: {&apos;length_greater_than_1&apos;: &quot;TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: &apos;&apos;&quot;, &apos;islower&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[function_input_builtin_stdlib-fOO-ValueError]" time="0.00403594970703125"><system-out>Error validating input [s=fOO] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;&apos;fOO&apos;&gt;. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;, &apos;length_greater_than_1&apos;] / Failures: {&apos;islower&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_2-foo-True]" time="0.002373933792114258"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_2-foo_123-True]" time="0.0031232833862304688"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_2-1.1-TypeError]" time="0.002842426300048828"><system-out>Error validating [s=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_2--ValueError]" time="0.0028731822967529297"><system-out>Error validating [s=&apos;&apos;]. TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: &apos;&apos;.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_2-fOO-ValueError]" time="0.002699136734008789"><system-out>Error validating [s=fOO]: validation function [islower] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_1-foo-True]" time="0.002275705337524414"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_1-foo_123-True]" time="0.002450704574584961"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_1-1.1-TypeError]" time="0.002891063690185547"><system-out>Error validating [s=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_1--ValueError]" time="0.003173351287841797"><system-out>Error validating [s=&apos;&apos;]. TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: &apos;&apos;.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="25" name="test_example_2[inline_validate_1-fOO-ValueError]" time="0.0028281211853027344"><system-out>Error validating [s=fOO]. NotEqual: x == foo does not hold for x=fOO. Wrong value: &apos;fOO&apos;.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="46" name="test_example_2_regexp[foo@bar.com-True]" time="0.0028328895568847656"></testcase><testcase classname="valid8.tests.readme.examples.test_example2" file="valid8/tests/readme/examples/test_example2.py" line="46" name="test_example_2_regexp[a@a@s-ValueError]" time="0.0026595592498779297"><system-out>Error validating [s=a@a@s]: validation function [&lt;lambda&gt;] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(0.2, &apos;foo&apos;)-True]" time="0.0025720596313476562"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(1.0, &apos;abc&apos;)-True]" time="0.0025146007537841797"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(0, &apos;foo&apos;)-True]" time="0.002481698989868164"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0033905506134033203"><system-out>Error validating [t=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003325939178466797"><system-out>Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t))] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003207683563232422"><system-out>Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0]))] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0028884410858154297"><system-out>Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0])) ; if not (0 &lt;= t[0] &lt;= 1): ; raise ValueError(&apos;first elt should be between 0 and 1,found &apos; + str(t[0]))] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0030319690704345703"><system-out>Error validating [t=(1.0, False)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0])) ; if not (0 &lt;= t[0] &lt;= 1): ; raise ValueError(&apos;first elt should be between 0 and 1,found &apos; + str(t[0])) ;  ; # the second element is a lowercase string of size 3 ; if not isinstance(t[1], str): ; raise TypeError(&apos;second elt should be a string, found &apos; + str(t[1]))] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003822803497314453"><system-out>Error validating [t=(0.5, &apos;a&apos;)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0])) ; if not (0 &lt;= t[0] &lt;= 1): ; raise ValueError(&apos;first elt should be between 0 and 1,found &apos; + str(t[0])) ;  ; # the second element is a lowercase string of size 3 ; if not isinstance(t[1], str): ; raise TypeError(&apos;second elt should be a string, found &apos; + str(t[1])) ; if not (len(t[1]) == 3 and t[1].islower()): ; raise ValueError(&apos;second elt should be a lowercase string of length 3,&apos; ; &apos;found &apos; + str(t[1]))] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_failure_raiser-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003014802932739258"><system-out>Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0])) ; if not (0 &lt;= t[0] &lt;= 1): ; raise ValueError(&apos;first elt should be between 0 and 1,found &apos; + str(t[0])) ;  ; # the second element is a lowercase string of size 3 ; if not isinstance(t[1], str): ; raise TypeError(&apos;second elt should be a string, found &apos; + str(t[1])) ; if not (len(t[1]) == 3 and t[1].islower()): ; raise ValueError(&apos;second elt should be a lowercase string of length 3,&apos; ; &apos;found &apos; + str(t[1]))] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.006334543228149414"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.005749940872192383"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.005302906036376953"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.006482601165771484"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=1.1] for class [Foo]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00684809684753418"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006649971008300781"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006072521209716797"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.007158756256103516"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=(1.0, False)] for class [Foo]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006040334701538086"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_is_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006062746047973633"><system-out>calling function class_fields_custom with custom func ex3_is_valid_tuple_pep
Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.0038232803344726562"><system-out>calling function class_fields_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.0035240650177001953"><system-out>calling function class_fields_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.004088401794433594"><system-out>calling function class_fields_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0037093162536621094"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=1.1] for class [Foo]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003755331039428711"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003949642181396484"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: &apos;1.0&apos;.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004399538040161133"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003849029541015625"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(1.0, False)] for class [Foo]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004023551940917969"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_is_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004209756851196289"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.0039823055267333984"><system-out>calling function class_fields_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.0030100345611572266"><system-out>calling function class_fields_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0039517879486083984"><system-out>calling function class_fields_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.003912448883056641"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=1.1] for class [Foo]. Validation function [check_valid_tuple] raised TypeError: item should be a tuple.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00406646728515625"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [check_valid_tuple] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004491567611694336"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [check_valid_tuple] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0039446353912353516"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]. Validation function [check_valid_tuple] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004501819610595703"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(1.0, False)] for class [Foo]. Validation function [check_valid_tuple] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003998994827270508"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_check_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00449061393737793"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.005887746810913086"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.006232261657714844"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.005818843841552734"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.006680965423583984"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=1.1] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00834202766418457"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005843400955200195"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00512242317199707"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005965471267700195"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=(1.0, False)] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006754398345947266"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_fields_custom_ex3_check_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005292654037475586"><system-out>calling function class_fields_custom with custom func ex3_check_valid_tuple_pep
Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(0.2, &apos;foo&apos;)-True]" time="0.004321575164794922"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(1.0, &apos;abc&apos;)-True]" time="0.004961967468261719"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(0, &apos;foo&apos;)-True]" time="0.004853725433349609"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0053637027740478516"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=1.1]. Validation function [v.alid = custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006219387054443359"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [v.alid = custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006233692169189453"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [v.alid = custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0054473876953125"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=(1.1, &apos;foo&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006022453308105469"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=(1.0, False)]. Validation function [v.alid = custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00524449348449707"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=(0.5, &apos;a&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_ex3_is_valid_tuple_pep_boolean-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005616903305053711"><system-out>calling function inline_validator_custom_boolean with custom func ex3_is_valid_tuple_pep
Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0.2, &apos;foo&apos;)-True]" time="0.0027189254760742188"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(1.0, &apos;abc&apos;)-True]" time="0.0026214122772216797"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0, &apos;foo&apos;)-True]" time="0.00267791748046875"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.003488779067993164"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=1.1]. Validation function [v.alid = custom(t)] raised HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003467559814453125"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(0.2, &apos;foo&apos;, True)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0019762516021728516"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [v.alid = custom(t)] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: &apos;1.0&apos;.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0019910335540771484"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(1.1, &apos;foo&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0025103092193603516"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(1.0, False)]. Validation function [v.alid = custom(t)] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002409219741821289"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(0.5, &apos;a&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0027952194213867188"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(0.2, &apos;foo&apos;)-True]" time="0.004013776779174805"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(1.0, &apos;abc&apos;)-True]" time="0.0036919116973876953"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(0, &apos;foo&apos;)-True]" time="0.003838777542114258"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.004496097564697266"><system-out>Error validating field [t=1.1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.1&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: 1.1&quot;, &apos;length_equals_2&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004714250564575195"><system-out>Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(0.2, &apos;foo&apos;, True)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;] / Failures: {&apos;length_equals_2&apos;: &quot;WrongLength: len(x) == 2 does not hold for x=(0.2, &apos;foo&apos;, True). Wrong value: (0.2, &apos;foo&apos;, True)&quot;, &quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &quot;Failure: on_each_: x does not have the same number of elements than `validation_functions_collection`. Wrong value: (0.2, &apos;foo&apos;, True)&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004558563232421875"><system-out>Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;, between_0_and_1)] raised [AtLeastOneFailed: At least one validation function failed validation for value &lt;\&apos;1.0\&apos;&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class \&apos;numbers.Real\&apos;&gt;. Wrong value: \&apos;1.0\&apos;&quot;, \&apos;between_0_and_1\&apos;: \&apos;TypeError: unorderable types: int() &lt;= str()\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0043849945068359375"><system-out>Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;, between_0_and_1)] raised [AtLeastOneFailed: At least one validation function failed validation for value &lt;1.1&gt;. Successes: [&quot;instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;&quot;] / Failures: {\&apos;between_0_and_1\&apos;: \&apos;NotInRange: 0 &lt;= x &lt;= 1 does not hold for x=1.1. Wrong value: 1.1\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005210399627685547"><system-out>Error validating field [t=(1.0, False)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value &lt;False&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class \&apos;str\&apos;&gt;. Wrong value: False&quot;, \&apos;length_equals_3\&apos;: &quot;TypeError: object of type \&apos;bool\&apos; has no len()&quot;, \&apos;islower\&apos;: &quot;TypeError: descriptor \&apos;islower\&apos; requires a \&apos;str\&apos; object but received a \&apos;bool\&apos;&quot;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004230022430419922"><system-out>Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value &lt;\&apos;a\&apos;&gt;. Successes: [&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;, \&apos;islower\&apos;] / Failures: {\&apos;length_equals_3\&apos;: &quot;WrongLength: len(x) == 3 does not hold for x=a. Wrong value: \&apos;a\&apos;&quot;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_builtin_stdlib-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004518032073974609"><system-out>Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value &lt;\&apos;AAA\&apos;&gt;. Successes: [&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;, \&apos;length_equals_3\&apos;] / Failures: {\&apos;islower\&apos;: \&apos;False\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(0.2, &apos;foo&apos;)-True]" time="0.002481222152709961"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(1.0, &apos;abc&apos;)-True]" time="0.002472400665283203"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(0, &apos;foo&apos;)-True]" time="0.0030663013458251953"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.002804994583129883"><system-out>Error validating [t=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0030422210693359375"><system-out>Error validating [t=(0.2, &apos;foo&apos;, True)]: validation function [v.alid = len(t) == 2 \] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0032105445861816406"><system-out>Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: &apos;1.0&apos;.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0031118392944335938"><system-out>Error validating [t=(1.1, &apos;foo&apos;)]: validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003378629684448242"><system-out>Error validating [t=(1.0, False)]. Validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \ ; and instance_of(t[1], str) and len(t[1]) == 3 and t[1].islower()] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002932310104370117"><system-out>Error validating [t=(0.5, &apos;a&apos;)]: validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \ ; and instance_of(t[1], str) and len(t[1]) == 3 and t[1].islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[with_validator_boolean_tester-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003059864044189453"><system-out>Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \ ; and instance_of(t[1], str) and len(t[1]) == 3 and t[1].islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(0.2, &apos;foo&apos;)-True]" time="0.003621339797973633"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(1.0, &apos;abc&apos;)-True]" time="0.003554821014404297"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(0, &apos;foo&apos;)-True]" time="0.0035033226013183594"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.004674196243286133"><system-out>Error validating input [t=1.1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.1&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: 1.1&quot;, &apos;length_equals_2&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004294157028198242"><system-out>Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(0.2, &apos;foo&apos;, True)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;] / Failures: {&apos;length_equals_2&apos;: &quot;WrongLength: len(x) == 2 does not hold for x=(0.2, &apos;foo&apos;, True). Wrong value: (0.2, &apos;foo&apos;, True)&quot;, &quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &quot;Failure: on_each_: x does not have the same number of elements than `validation_functions_collection`. Wrong value: (0.2, &apos;foo&apos;, True)&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.00457453727722168"><system-out>Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;, between_0_and_1)] raised [AtLeastOneFailed: At least one validation function failed validation for value &lt;\&apos;1.0\&apos;&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class \&apos;numbers.Real\&apos;&gt;. Wrong value: \&apos;1.0\&apos;&quot;, \&apos;between_0_and_1\&apos;: \&apos;TypeError: unorderable types: int() &lt;= str()\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005060911178588867"><system-out>Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;, between_0_and_1)] raised [AtLeastOneFailed: At least one validation function failed validation for value &lt;1.1&gt;. Successes: [&quot;instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;&quot;] / Failures: {\&apos;between_0_and_1\&apos;: \&apos;NotInRange: 0 &lt;= x &lt;= 1 does not hold for x=1.1. Wrong value: 1.1\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005340576171875"><system-out>Error validating input [t=(1.0, False)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value &lt;False&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class \&apos;str\&apos;&gt;. Wrong value: False&quot;, \&apos;length_equals_3\&apos;: &quot;TypeError: object of type \&apos;bool\&apos; has no len()&quot;, \&apos;islower\&apos;: &quot;TypeError: descriptor \&apos;islower\&apos; requires a \&apos;str\&apos; object but received a \&apos;bool\&apos;&quot;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004435062408447266"><system-out>Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value &lt;\&apos;a\&apos;&gt;. Successes: [&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;, \&apos;islower\&apos;] / Failures: {\&apos;length_equals_3\&apos;: &quot;WrongLength: len(x) == 3 does not hold for x=a. Wrong value: \&apos;a\&apos;&quot;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_builtin_stdlib-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005873680114746094"><system-out>Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value &lt;\&apos;AAA\&apos;&gt;. Successes: [&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;, \&apos;length_equals_3\&apos;] / Failures: {\&apos;islower\&apos;: \&apos;False\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(0.2, &apos;foo&apos;)-True]" time="0.005251169204711914"><system-out>uncomment and put your breakpoint here to debug
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(1.0, &apos;abc&apos;)-True]" time="0.0037889480590820312"><system-out>uncomment and put your breakpoint here to debug
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(0, &apos;foo&apos;)-True]" time="0.004236698150634766"><system-out>uncomment and put your breakpoint here to debug
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.004477739334106445"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=1.1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.1&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: 1.1&quot;, &apos;len(t) == 2&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;instance_of(t[0], Real)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;instance_of(t[1], str)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;len(t[1]) == 3&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;t[1].islower()&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004812479019165039"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(0.2, &apos;foo&apos;, True)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;len(t) == 2&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005149126052856445"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(&apos;1.0&apos;, &apos;foo&apos;)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;instance_of(t[0], Real)&apos;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: &apos;1.0&apos;&quot;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004601955413818359"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(1.1, &apos;foo&apos;)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004718780517578125"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(1.0, False)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;] / Failures: {&apos;instance_of(t[1], str)&apos;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: False&quot;, &apos;len(t[1]) == 3&apos;: &quot;TypeError: object of type &apos;bool&apos; has no len()&quot;, &apos;t[1].islower()&apos;: &quot;AttributeError: &apos;bool&apos; object has no attribute &apos;islower&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004588603973388672"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(0.5, &apos;a&apos;)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;len(t[1]) == 3&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_mini_lambda-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004551887512207031"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(0.5, &apos;AAA&apos;)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;] / Failures: {&apos;t[1].islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(0.2, &apos;foo&apos;)-True]" time="0.002527952194213867"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(1.0, &apos;abc&apos;)-True]" time="0.0024220943450927734"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(0, &apos;foo&apos;)-True]" time="0.0031342506408691406"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0028409957885742188"><system-out>Error validating [t=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0028133392333984375"><system-out>Error validating [t=(0.2, &apos;foo&apos;, True)]. WrongLength: len(x) == 2 does not hold for x=(0.2, &apos;foo&apos;, True). Wrong value: (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0029752254486083984"><system-out>Error validating [t[0]=1.0]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: &apos;1.0&apos;.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0030570030212402344"><system-out>Error validating [t[0]=1.1]. TooBig: x &lt;= 1 does not hold for x=1.1. Wrong value: 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003221750259399414"><system-out>Error validating [t[1]=False]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002992391586303711"><system-out>Error validating [t[1]=a]. WrongLength: len(x) == 3 does not hold for x=a. Wrong value: &apos;a&apos;.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_1-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0025680065155029297"><system-out>Error validating [t[1]=AAA]: validation function [islower] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(0.2, &apos;foo&apos;)-True]" time="0.004456758499145508"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(1.0, &apos;abc&apos;)-True]" time="0.0040094852447509766"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(0, &apos;foo&apos;)-True]" time="0.004632711410522461"></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.004671812057495117"><system-out>Error validating field [t=1.1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;1.1&gt;. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: 1.1&quot;, &apos;len(t) == 2&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;instance_of(t[0], Real)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;instance_of(t[1], str)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;len(t[1]) == 3&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;t[1].islower()&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0061032772064208984"><system-out>Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(0.2, &apos;foo&apos;, True)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;len(t) == 2&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005141735076904297"><system-out>Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(&apos;1.0&apos;, &apos;foo&apos;)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;instance_of(t[0], Real)&apos;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: &apos;1.0&apos;&quot;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004733562469482422"><system-out>Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(1.1, &apos;foo&apos;)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005278825759887695"><system-out>Error validating field [t=(1.0, False)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(1.0, False)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;] / Failures: {&apos;instance_of(t[1], str)&apos;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: False&quot;, &apos;len(t[1]) == 3&apos;: &quot;TypeError: object of type &apos;bool&apos; has no len()&quot;, &apos;t[1].islower()&apos;: &quot;AttributeError: &apos;bool&apos; object has no attribute &apos;islower&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005137443542480469"><system-out>Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(0.5, &apos;a&apos;)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;len(t[1]) == 3&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[class_field_mini_lambda-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00477910041809082"><system-out>Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value &lt;(0.5, &apos;AAA&apos;)&gt;. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;] / Failures: {&apos;t[1].islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.005816936492919922"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.005845308303833008"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.005476951599121094"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.006068229675292969"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=1.1] for function [my_function]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006435871124267578"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006554365158081055"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006013154983520508"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006126880645751953"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006196260452270508"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_is_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006293773651123047"><system-out>calling function function_input_custom with custom func ex3_is_valid_tuple_pep
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.0034940242767333984"><system-out>calling function function_input_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.0033354759216308594"><system-out>calling function function_input_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0035169124603271484"><system-out>calling function function_input_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.003870725631713867"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=1.1] for function [my_function]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0035839080810546875"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003971576690673828"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: &apos;1.0&apos;.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0038025379180908203"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003991842269897461"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003983259201049805"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_is_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00462794303894043"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.0034301280975341797"><system-out>calling function function_input_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.0035047531127929688"><system-out>calling function function_input_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0033195018768310547"><system-out>calling function function_input_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0039632320404052734"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=1.1] for function [my_function]. Validation function [check_valid_tuple] raised TypeError: item should be a tuple.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004625797271728516"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [check_valid_tuple] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003962516784667969"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [check_valid_tuple] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0036373138427734375"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]. Validation function [check_valid_tuple] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004044294357299805"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [check_valid_tuple] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003916025161743164"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_check_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003726959228515625"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.005940675735473633"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.006873369216918945"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.005919694900512695"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.006844043731689453"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=1.1] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.007242918014526367"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006758451461791992"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006826639175415039"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.007444620132446289"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.007471799850463867"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[function_input_custom_ex3_check_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006362438201904297"><system-out>calling function function_input_custom with custom func ex3_check_valid_tuple_pep
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0.2, &apos;foo&apos;)-True]" time="0.002618074417114258"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(1.0, &apos;abc&apos;)-True]" time="0.0025856494903564453"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0, &apos;foo&apos;)-True]" time="0.0025467872619628906"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.002994060516357422"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=1.1]. Validation function [custom(t)] raised TypeError: item should be a tuple.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0029144287109375"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [custom(t)] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0020678043365478516"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [custom(t)] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0033555030822753906"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [custom(t)] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003027200698852539"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(1.0, False)]. Validation function [custom(t)] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003194093704223633"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(0.5, &apos;a&apos;)]. Validation function [custom(t)] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003517627716064453"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [custom(t)] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(0.2, &apos;foo&apos;)-True]" time="0.0059206485748291016"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(1.0, &apos;abc&apos;)-True]" time="0.005815029144287109"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(0, &apos;foo&apos;)-True]" time="0.005604982376098633"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.006493568420410156"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=1.1]. Validation function [custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006195783615112305"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006876945495605469"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006052255630493164"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [custom(t)] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006710052490234375"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=(1.0, False)]. Validation function [custom(t)] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006029605865478516"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=(0.5, &apos;a&apos;)]. Validation function [custom(t)] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validation_custom_ex3_check_valid_tuple_pep_raiser-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.007287502288818359"><system-out>calling function inline_validation_custom_raiser with custom func ex3_check_valid_tuple_pep
Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [custom(t)] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.0048885345458984375"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.00461268424987793"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.004521846771240234"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.004681825637817383"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=1.1]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0057582855224609375"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005896329879760742"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0052645206451416016"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=(1.1, &apos;foo&apos;)]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005893230438232422"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=(1.0, False)]. Validation function [ex3_is_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005093812942504883"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=(0.5, &apos;a&apos;)]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_is_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004975318908691406"><system-out>calling function inline_validate_custom with custom func ex3_is_valid_tuple_pep
Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [ex3_is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.002458333969116211"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.002402782440185547"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0024566650390625"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0029435157775878906"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=1.1]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0029129981994628906"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(0.2, &apos;foo&apos;, True)]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005137205123901367"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: &apos;1.0&apos;.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0029239654541015625"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(1.1, &apos;foo&apos;)]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003033161163330078"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(1.0, False)]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002852916717529297"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(0.5, &apos;a&apos;)]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_is_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0029807090759277344"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.002474069595336914"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.03904271125793457"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0024640560150146484"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0031692981719970703"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=1.1]. Validation function [check_valid_tuple] raised TypeError: item should be a tuple.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003057241439819336"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [check_valid_tuple] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003395557403564453"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [check_valid_tuple] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002907276153564453"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [check_valid_tuple] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0030794143676757812"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(1.0, False)]. Validation function [check_valid_tuple] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0029833316802978516"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(0.5, &apos;a&apos;)]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_check_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0033364295959472656"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.005744457244873047"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.005615234375"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.005682945251464844"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0064694881439208984"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=1.1]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00662541389465332"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006021022796630859"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006346464157104492"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006619691848754883"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=(1.0, False)]. Validation function [ex3_check_valid_tuple_pep] raised InputTypeError: 
  valid8.tests.readme.examples._tests_pep484.ex3_check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006304025650024414"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=(0.5, &apos;a&apos;)]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.readme.examples.test_example3" file="valid8/tests/readme/examples/test_example3.py" line="49" name="test_example_3[inline_validate_custom_ex3_check_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006711721420288086"><system-out>calling function inline_validate_custom with custom func ex3_check_valid_tuple_pep
Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [ex3_check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="7" name="test_is_in" time="0.00225830078125"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="15" name="test_contains" time="0.0014486312866210938"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="22" name="test_is_subset_is_superset" time="0.0020706653594970703"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="45" name="test_on_all" time="0.0016489028930664062"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="54" name="test_on_each" time="0.0017490386962890625"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="63" name="test_haslen" time="0.0014040470123291016"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="70" name="test_minlen" time="0.0014503002166748047"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="77" name="test_maxlen" time="0.0014679431915283203"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="84" name="test_empty" time="0.001455068588256836"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="91" name="test_nonempty" time="0.0015769004821777344"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="98" name="test_length_between" time="0.001466989517211914"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_collections" file="valid8/tests/validation_lib/test_validators_collections.py" line="107" name="test_numpy_nan_like_lengths" time="0.0014796257019042969"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_comparables" file="valid8/tests/validation_lib/test_validators_comparables.py" line="5" name="test_gt" time="0.0015633106231689453"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_comparables" file="valid8/tests/validation_lib/test_validators_comparables.py" line="12" name="test_gts" time="0.0014965534210205078"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_comparables" file="valid8/tests/validation_lib/test_validators_comparables.py" line="19" name="test_lt" time="0.0016782283782958984"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_comparables" file="valid8/tests/validation_lib/test_validators_comparables.py" line="26" name="test_lts" time="0.0014805793762207031"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_comparables" file="valid8/tests/validation_lib/test_validators_comparables.py" line="33" name="test_between" time="0.0015246868133544922"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_comparables" file="valid8/tests/validation_lib/test_validators_comparables.py" line="45" name="test_numpy_nan" time="0.0018496513366699219"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_numbers" file="valid8/tests/validation_lib/test_validators_numbers.py" line="5" name="test_is_even" time="0.0015225410461425781"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_numbers" file="valid8/tests/validation_lib/test_validators_numbers.py" line="11" name="test_is_odd" time="0.0018169879913330078"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_numbers" file="valid8/tests/validation_lib/test_validators_numbers.py" line="17" name="test_is_multiple_of" time="0.0014865398406982422"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_types" file="valid8/tests/validation_lib/test_validators_types.py" line="5" name="test_instance_of" time="0.0017819404602050781"></testcase><testcase classname="valid8.tests.validation_lib.test_validators_types" file="valid8/tests/validation_lib/test_validators_types.py" line="31" name="test_subclass_of" time="0.0016415119171142578"></testcase></testsuite>