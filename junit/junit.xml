<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="3" name="pytest" skips="0" tests="411" time="5.750"><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="6" name="test_empty_validators_list" time="0.0011720657348632812"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="13" name="test_list_implicit_and" time="0.0016231536865234375"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="22" name="test_not_not_all" time="0.002508878707885742"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="56" name="test_validate_or" time="0.0012335777282714844"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="82" name="test_validate_xor" time="0.001638174057006836"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="106" name="test_validate_and" time="0.0013871192932128906"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="8" name="test_validate_field" time="0.0023717880249023438"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="53" name="test_validate_field_property" time="0.004175901412963867"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="103" name="test_validate_field_custom_type" time="0.004647254943847656"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="142" name="test_validate_attr" time="0.01393580436706543"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="154" name="test_validate_arg_nominal_builtin_validators" time="0.0062105655670166016"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="184" name="test_validate_out" time="0.00522613525390625"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="201" name="test_validate_nominal_builtin_validators" time="0.005651235580444336"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="231" name="test_validate_custom_validators_basic" time="0.005063772201538086"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="279" name="test_validate_custom_validators_with_exception" time="0.005048990249633789"><system-out>hello
1
2
3
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="332" name="test_validate_mini_lambda" time="0.002569437026977539"><system-out>Hello, john your age is 20
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="345" name="test_validate_none_enforce" time="0.0073089599609375"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="366" name="test_validate_none_pytypes" time="0.015687942504882812"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="387" name="test_validate_none_is_allowed" time="0.002743959426879883"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="399" name="test_validate_name_error" time="0.001589059829711914"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="408" name="test_decorate_manually" time="0.0019550323486328125"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="4" name="test_validate_" time="0.0023407936096191406"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="30" name="test_readme_usage_validate__customization" time="0.0022115707397460938"></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="68" name="test_wrap_valid" time="0.028810501098632812"><failure message="assert &apos;Error valida...ex() &gt; int().&apos; == &quot;Error validat...x&apos; and &apos;int&apos;.&quot;
  - Error validating [surface=1j]. Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised TypeError: unorderable types: complex() &gt; int().
  ?                                                                                                             ^     ^ ^^^^^^^  ^^       ^^^^^   ^^
  + Error validating [surface=1j]. Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised TypeError: &apos;&gt;&apos; not supported between instances of &apos;complex&apos; and &apos;int&apos;.
  ?                                                                                                             ^^^^  +++++++ ++ ++ ^^^^^^^^^^ ^^  ^^^^^       ^^^^^^^   ^">def test_wrap_valid():
        &quot;&quot;&quot; Tests the validation context manager &quot;&quot;&quot;
    
        from valid8 import wrap_valid
        from math import isfinite
    
        # nominal
        surf = 2
        with wrap_valid(&apos;surface&apos;, surf) as v:
            v.alid = surf &gt; 0 and isfinite(surf)
    
        # wrong value (no inner exception)
        surf = -1
        with pytest.raises(ValidationError) as exc_info:
            with wrap_valid(&apos;surface&apos;, surf) as v:
                v.alid = surf &gt; 0 and isfinite(surf)
        e = exc_info.value
        assert str(e) == &quot;Error validating [surface=-1]: &quot; \
                         &quot;validation function [v.alid = surf &gt; 0 and isfinite(surf)] returned [False].&quot;
    
        # wrong type (inner exception)
        with pytest.raises(ValidationError) as exc_info:
            surf = 1j
            with wrap_valid(&apos;surface&apos;, surf) as v:
                v.alid = surf &gt; 0 and isfinite(surf)
        e = exc_info.value
&gt;       assert str(e) == &quot;Error validating [surface=1j]. &quot; \
                         &quot;Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised &quot; \
                         &quot;TypeError: &apos;&gt;&apos; not supported between instances of &apos;complex&apos; and &apos;int&apos;.&quot;
E       assert &apos;Error valida...ex() &gt; int().&apos; == &quot;Error validat...x&apos; and &apos;int&apos;.&quot;
E         - Error validating [surface=1j]. Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised TypeError: unorderable types: complex() &gt; int().
E         ?                                                                                                             ^     ^ ^^^^^^^  ^^       ^^^^^   ^^
E         + Error validating [surface=1j]. Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised TypeError: &apos;&gt;&apos; not supported between instances of &apos;complex&apos; and &apos;int&apos;.
E         ?                                                                                                             ^^^^  +++++++ ++ ++ ^^^^^^^^^^ ^^  ^^^^^       ^^^^^^^   ^

valid8/tests/test_entry_points_inline.py:95: AssertionError</failure></testcase><testcase classname="valid8.tests.test_entry_points_inline" file="valid8/tests/test_entry_points_inline.py" line="99" name="test_readme_usage_wrap_valid_customization" time="0.006350517272949219"><failure message="assert &apos;Surface shou...ex() &gt; int().&apos; == &quot;Surface shoul...x&apos; and &apos;int&apos;.&quot;
  - Surface should be a finite positive integer. Error validating [surface=1j]. Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised TypeError: unorderable types: complex() &gt; int().
  ?                                                                                                                                                          ^^^^^^^^ ^^^^^^^^^^       ^^^^^^^^^^^
  + Surface should be a finite positive integer. Error validating [surface=1j]. Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised TypeError: &apos;&gt;&apos; not supported between instances of &apos;complex&apos; and &apos;int&apos;.
  ?                                                                                                                                                          ^^^^^^^^^^^^^^^^^^ ^^^^^^^^^^^^^^^^^^^^^       ^^^^^^^^^^^^">def test_readme_usage_wrap_valid_customization():
    
        from valid8 import wrap_valid
        from math import isfinite
    
        surf = 1j
    
        # (A) custom error message (exception is still a ValidationError)
        with pytest.raises(ValidationError) as exc_info:
            with wrap_valid(&apos;surface&apos;, surf, help_msg=&quot;Surface should be a finite positive integer&quot;) as v:
                v.alid = surf &gt; 0 and isfinite(surf)
        e = exc_info.value
&gt;       assert str(e) == &quot;Surface should be a finite positive integer. Error validating [surface=1j]. &quot; \
                         &quot;Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised &quot; \
                         &quot;TypeError: &apos;&gt;&apos; not supported between instances of &apos;complex&apos; and &apos;int&apos;.&quot;
E       assert &apos;Surface shou...ex() &gt; int().&apos; == &quot;Surface shoul...x&apos; and &apos;int&apos;.&quot;
E         - Surface should be a finite positive integer. Error validating [surface=1j]. Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised TypeError: unorderable types: complex() &gt; int().
E         ?                                                                                                                                                          ^^^^^^^^ ^^^^^^^^^^       ^^^^^^^^^^^
E         + Surface should be a finite positive integer. Error validating [surface=1j]. Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised TypeError: &apos;&gt;&apos; not supported between instances of &apos;complex&apos; and &apos;int&apos;.
E         ?                                                                                                                                                          ^^^^^^^^^^^^^^^^^^ ^^^^^^^^^^^^^^^^^^^^^       ^^^^^^^^^^^^

valid8/tests/test_entry_points_inline.py:112: AssertionError</failure></testcase><testcase classname="valid8.tests.test_readme_combining" file="valid8/tests/test_readme_combining.py" line="7" name="test_readme_index_combining_enforce" time="0.0093994140625"><system-out>Building house... DONE !
Building house... DONE !
</system-out></testcase><testcase classname="valid8.tests.test_readme_combining" file="valid8/tests/test_readme_combining.py" line="50" name="test_readme_index_combining_autoclass" time="0.0138702392578125"></testcase><testcase classname="valid8.tests.test_readme_combining" file="valid8/tests/test_readme_combining.py" line="82" name="test_readme_index_combining_autoclass_2" time="0.007052421569824219"></testcase><testcase classname="valid8.tests.test_readme_combining" file="valid8/tests/test_readme_combining.py" line="113" name="test_readme_index_combining_attrs" time="0.005634784698486328"></testcase><testcase classname="valid8.tests.test_readme_combining" file="valid8/tests/test_readme_combining.py" line="145" name="test_unused_pytypes" time="0.02142810821533203"><system-out>you did it !
you did it !
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples" file="valid8/tests/test_readme_examples.py" line="7" name="test_readme_examples_4" time="0.007093906402587891"></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="9" name="test_readme_index_usage_quick" time="0.0022573471069335938"></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="23" name="test_readme_usage_wrap_valid" time="0.007085561752319336"><failure message="assert &apos;Error valida...ex() &gt; int().&apos; == &quot;Error validat...x&apos; and &apos;int&apos;.&quot;
  - Error validating [surface=1j]. Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised TypeError: unorderable types: complex() &gt; int().
  ?                                                                                                             ^     ^ ^^^^^^^  ^^       ^^^^^   ^^
  + Error validating [surface=1j]. Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised TypeError: &apos;&gt;&apos; not supported between instances of &apos;complex&apos; and &apos;int&apos;.
  ?                                                                                                             ^^^^  +++++++ ++ ++ ^^^^^^^^^^ ^^  ^^^^^       ^^^^^^^   ^">def test_readme_usage_wrap_valid():
        &quot;&quot;&quot; Tests that the example under index/usage/validation works &quot;&quot;&quot;
    
        from valid8 import wrap_valid
        from math import isfinite
    
        surf = -1
    
        with pytest.raises(ValidationError) as exc_info:
            with wrap_valid(&apos;surface&apos;, surf) as v:
                v.alid = surf &gt; 0 and isfinite(surf)
        e = exc_info.value
        assert str(e) == &quot;Error validating [surface=-1]: &quot; \
                         &quot;validation function [v.alid = surf &gt; 0 and isfinite(surf)] returned [False].&quot;
    
        surf = 1j
    
        with pytest.raises(ValidationError) as exc_info:
            with wrap_valid(&apos;surface&apos;, surf) as v:
                v.alid = surf &gt; 0 and isfinite(surf)
        e = exc_info.value
&gt;       assert str(e) == &quot;Error validating [surface=1j]. &quot; \
                         &quot;Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised &quot; \
                         &quot;TypeError: &apos;&gt;&apos; not supported between instances of &apos;complex&apos; and &apos;int&apos;.&quot;
E       assert &apos;Error valida...ex() &gt; int().&apos; == &quot;Error validat...x&apos; and &apos;int&apos;.&quot;
E         - Error validating [surface=1j]. Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised TypeError: unorderable types: complex() &gt; int().
E         ?                                                                                                             ^     ^ ^^^^^^^  ^^       ^^^^^   ^^
E         + Error validating [surface=1j]. Validation function [v.alid = surf &gt; 0 and isfinite(surf)] raised TypeError: &apos;&gt;&apos; not supported between instances of &apos;complex&apos; and &apos;int&apos;.
E         ?                                                                                                             ^^^^  +++++++ ++ ++ ^^^^^^^^^^ ^^  ^^^^^       ^^^^^^^   ^

valid8/tests/test_readme_index.py:45: AssertionError</failure></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="77" name="test_readme_usage_customization" time="0.004728078842163086"></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="141" name="test_readme_index_usage_basic" time="0.002325773239135742"></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="165" name="test_readme_index_usage_function" time="0.0041713714599609375"><system-out>Building house... DONE !
Building house... DONE !
Building house... DONE !
</system-out></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="210" name="test_readme_index_usage_class_fields" time="0.003941059112548828"></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="244" name="test_testing" time="0.0023331642150878906"></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="259" name="test_advanced_composition" time="0.0014338493347167969"></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="278" name="test_readme_index_usage_customization" time="0.002743959426879883"></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="337" name="test_readme_index_usage_composition" time="0.0029468536376953125"></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="8" name="test_tutorial" time="0.0020287036895751953"></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="68" name="test_usage_base_validation_functions" time="0.0010097026824951172"></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="74" name="test_usage_ensure_valid" time="0.0038309097290039062"></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="124" name="test_usage_is_valid" time="0.001706838607788086"></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="164" name="test_usage_validators" time="0.0049839019775390625"></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="321" name="test_usage_validate_annotation" time="0.0025510787963867188"></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="338" name="test_usage_custom_validators" time="0.0028400421142578125"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_input_mini_lambda-0-True]" time="0.004535675048828125"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_input_mini_lambda-100-True]" time="0.0054776668548583984"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_input_mini_lambda-foo-TypeError]" time="0.0043599605560302734"><system-out>Error validating input [x=foo] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;x &gt;= 0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_input_mini_lambda-1.0-TypeError]" time="0.004176139831542969"><system-out>Error validating input [x=1.0] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;x &gt;= 0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_input_mini_lambda--1-ValueError]" time="0.0031888484954833984"><system-out>Error validating input [x=-1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;x &gt;= 0&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_output_builtin-0-True]" time="0.003276348114013672"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_output_builtin-100-True]" time="0.004713773727416992"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_output_builtin-foo-TypeError]" time="0.0037076473236083984"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;greater_than_0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_output_builtin-1.0-TypeError]" time="0.004106044769287109"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;greater_than_0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_output_builtin--1-ValueError]" time="0.003212451934814453"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;greater_than_0&apos;: &apos;TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: [-1]&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[inline_validate-0-True]" time="0.0017442703247070312"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[inline_validate-100-True]" time="0.004739284515380859"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[inline_validate-foo-TypeError]" time="0.002592325210571289"><system-out>Error validating [x=foo]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[inline_validate-1.0-TypeError]" time="0.0025146007537841797"><system-out>Error validating [x=1.0]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[inline_validate--1-ValueError]" time="0.002399921417236328"><system-out>Error validating [x=-1]. TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: [-1].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[class_field_builtin_stdlib-0-True]" time="0.003787994384765625"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[class_field_builtin_stdlib-100-True]" time="0.0033402442932128906"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[class_field_builtin_stdlib-foo-TypeError]" time="0.004903078079223633"><system-out>Error validating field [x=foo] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;greater_than_0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[class_field_builtin_stdlib-1.0-TypeError]" time="0.0034825801849365234"><system-out>Error validating field [x=1.0] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;greater_than_0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[class_field_builtin_stdlib--1-ValueError]" time="0.0026781558990478516"><system-out>Error validating field [x=-1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;greater_than_0&apos;: &apos;TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: [-1]&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_io_mini_lambda-0-True]" time="0.00408172607421875"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_io_mini_lambda-100-True]" time="0.0029397010803222656"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_io_mini_lambda-foo-TypeError]" time="0.002898693084716797"><system-out>Error validating input [x=foo] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;x &gt;= 0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_io_mini_lambda-1.0-TypeError]" time="0.0038335323333740234"><system-out>Error validating input [x=1.0] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;x &gt;= 0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_io_mini_lambda--1-ValueError]" time="0.003531932830810547"><system-out>Error validating input [x=-1] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;x &gt;= 0&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_io_builtin-0-True]" time="0.0033714771270751953"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_io_builtin-100-True]" time="0.0038080215454101562"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_io_builtin-foo-TypeError]" time="0.00710749626159668"><system-out>Error validating input [x=foo] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;greater_than_0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_io_builtin-1.0-TypeError]" time="0.004919290542602539"><system-out>Error validating input [x=1.0] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;greater_than_0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_io_builtin--1-ValueError]" time="0.003858804702758789"><system-out>Error validating input [x=-1] for function [my_function3]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;greater_than_0&apos;: &apos;TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: [-1]&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[with_validator-0-True]" time="0.0031206607818603516"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[with_validator-100-True]" time="0.003337383270263672"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[with_validator-foo-TypeError]" time="0.0028603076934814453"><system-out>Error validating [x=foo]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[with_validator-1.0-TypeError]" time="0.0028595924377441406"><system-out>Error validating [x=1.0]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[with_validator--1-ValueError]" time="0.005247592926025391"><system-out>Error validating [x=-1]: validation function [v.alid = x &gt;= 0] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_input_builtin-0-True]" time="0.0036537647247314453"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_input_builtin-100-True]" time="0.0034525394439697266"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_input_builtin-foo-TypeError]" time="0.0037398338317871094"><system-out>Error validating input [x=foo] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;greater_than_0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_input_builtin-1.0-TypeError]" time="0.002325296401977539"><system-out>Error validating input [x=1.0] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;greater_than_0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_input_builtin--1-ValueError]" time="0.002888917922973633"><system-out>Error validating input [x=-1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, greater_than_0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;greater_than_0&apos;: &apos;TooSmall: x &gt;= 0 does not hold for x=-1. Wrong value: [-1]&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_output_mini_lambda-0-True]" time="0.004916667938232422"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_output_mini_lambda-100-True]" time="0.0034275054931640625"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_output_mini_lambda-foo-TypeError]" time="0.0034983158111572266"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;x &gt;= 0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_output_mini_lambda-1.0-TypeError]" time="0.004336357116699219"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;x &gt;= 0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[function_output_mini_lambda--1-ValueError]" time="0.004335165023803711"><system-out>Error validating output of function [my_function2]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;x &gt;= 0&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[pep484-0-True]" time="0.00600886344909668"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[pep484-100-True]" time="0.005601644515991211"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[pep484-foo-TypeError]" time="0.006387948989868164"><system-out>
  test_example1.my_function
  called with incompatible types:
Expected: Tuple[Integral]
Received: Tuple[str]
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[pep484-1.0-TypeError]" time="0.008372783660888672"><system-out>
  test_example1.my_function
  called with incompatible types:
Expected: Tuple[Integral]
Received: Tuple[float]
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[pep484--1-ValueError]" time="0.0038623809814453125"><system-out>Error validating input [x=-1] for function [my_function]: validation function [x &gt;= 0] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[class_field_mini_lambda-0-True]" time="0.003740072250366211"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[class_field_mini_lambda-100-True]" time="0.0033833980560302734"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[class_field_mini_lambda-foo-TypeError]" time="0.005265712738037109"><system-out>Error validating field [x=foo] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [foo]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [foo]&quot;, &apos;x &gt;= 0&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[class_field_mini_lambda-1.0-TypeError]" time="0.005722522735595703"><system-out>Error validating field [x=1.0] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [&apos;x &gt;= 0&apos;] / Failures: {&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Integral&apos;&gt;. Wrong value: [1.0]&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example1" file="valid8/tests/test_readme_examples/test_example1.py" line="133" name="test_example_1[class_field_mini_lambda--1-ValueError]" time="0.004270792007446289"><system-out>Error validating field [x=-1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;numbers.Integral&apos;&gt;, x &gt;= 0)] raised AtLeastOneFailed: At least one validation function failed validation for value [-1]. Successes: [&quot;instance_of_&lt;class &apos;numbers.Integral&apos;&gt;&quot;] / Failures: {&apos;x &gt;= 0&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_1-foo-True]" time="0.0030202865600585938"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_1-foo_123-True]" time="0.0023491382598876953"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_1-1.1-TypeError]" time="0.003274202346801758"><system-out>Error validating [s=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_1--ValueError]" time="0.0033333301544189453"><system-out>Error validating [s=]. TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: [].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_1-fOO-ValueError]" time="0.0031249523162841797"><system-out>Error validating [s=fOO]. NotEqual: x == foo does not hold for x=fOO. Wrong value: [fOO].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[class_field_builtin_stdlib-foo-True]" time="0.0035812854766845703"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[class_field_builtin_stdlib-foo_123-True]" time="0.0027751922607421875"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[class_field_builtin_stdlib-1.1-TypeError]" time="0.004221200942993164"><system-out>Error validating field [s=1.1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1]&quot;, &apos;length_greater_than_1&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;islower&apos;: &quot;TypeError: descriptor &apos;islower&apos; requires a &apos;str&apos; object but received a &apos;float&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[class_field_builtin_stdlib--ValueError]" time="0.002496004104614258"><system-out>Error validating field [s=] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value []. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;] / Failures: {&apos;length_greater_than_1&apos;: &apos;TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: []&apos;, &apos;islower&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[class_field_builtin_stdlib-fOO-ValueError]" time="0.004709959030151367"><system-out>Error validating field [s=fOO] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value [fOO]. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;, &apos;length_greater_than_1&apos;] / Failures: {&apos;islower&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[function_input_builtin_stdlib-foo-True]" time="0.001951456069946289"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[function_input_builtin_stdlib-foo_123-True]" time="0.003989458084106445"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[function_input_builtin_stdlib-1.1-TypeError]" time="0.005072593688964844"><system-out>Error validating input [s=1.1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1]&quot;, &apos;length_greater_than_1&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;islower&apos;: &quot;TypeError: descriptor &apos;islower&apos; requires a &apos;str&apos; object but received a &apos;float&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[function_input_builtin_stdlib--ValueError]" time="0.004122495651245117"><system-out>Error validating input [s=] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value []. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;] / Failures: {&apos;length_greater_than_1&apos;: &apos;TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: []&apos;, &apos;islower&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[function_input_builtin_stdlib-fOO-ValueError]" time="0.0032618045806884766"><system-out>Error validating input [s=fOO] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, length_greater_than_1, islower)] raised AtLeastOneFailed: At least one validation function failed validation for value [fOO]. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;, &apos;length_greater_than_1&apos;] / Failures: {&apos;islower&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_2-foo-True]" time="0.0026319026947021484"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_2-foo_123-True]" time="0.003214120864868164"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_2-1.1-TypeError]" time="0.002864360809326172"><system-out>Error validating [s=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_2--ValueError]" time="0.0018541812896728516"><system-out>Error validating [s=]. TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: [].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_2-fOO-ValueError]" time="0.003502368927001953"><system-out>Error validating [s=fOO]: validation function [islower] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[function_input_mini_lambda-foo-True]" time="0.0034821033477783203"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[function_input_mini_lambda-foo_123-True]" time="0.004491329193115234"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[function_input_mini_lambda-1.1-TypeError]" time="0.006190776824951172"><system-out>Error validating input [s=1.1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1]&quot;, &apos;len(s) &gt; 0&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;s.islower()&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;islower&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[function_input_mini_lambda--ValueError]" time="0.005350589752197266"><system-out>Error validating input [s=] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value []. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;] / Failures: {&apos;len(s) &gt; 0&apos;: &apos;False&apos;, &apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[function_input_mini_lambda-fOO-ValueError]" time="0.006913661956787109"><system-out>Error validating input [s=fOO] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [fOO]. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;, &apos;len(s) &gt; 0&apos;] / Failures: {&apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_3-foo-True]" time="0.002661466598510742"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_3-foo_123-True]" time="0.002967357635498047"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_3-1.1-TypeError]" time="0.002286672592163086"><system-out>Error validating [s=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_3--ValueError]" time="0.003130674362182617"><system-out>Error validating [s=]. TooShort: len(x) &gt;= 1 does not hold for x=. Wrong value: [].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[inline_validate_3-fOO-ValueError]" time="0.0037550926208496094"><system-out>Error validating [s=fOO]: validation function [txt.islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[pep484-foo-True]" time="0.007317304611206055"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[pep484-foo_123-True]" time="0.00408935546875"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[pep484-1.1-TypeError]" time="0.006360292434692383"><system-out>
  test_example2.my_function
  called with incompatible types:
Expected: Tuple[str]
Received: Tuple[float]
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[pep484--ValueError]" time="0.006379842758178711"><system-out>Error validating input [s=] for function [my_function]. Validation function [and(len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value []. Successes: [] / Failures: {&apos;len(s) &gt; 0&apos;: &apos;False&apos;, &apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[pep484-fOO-ValueError]" time="0.0071353912353515625"><system-out>Error validating input [s=fOO] for function [my_function]. Validation function [and(len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [fOO]. Successes: [&apos;len(s) &gt; 0&apos;] / Failures: {&apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[with_validator-foo-True]" time="0.0033473968505859375"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[with_validator-foo_123-True]" time="0.0032804012298583984"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[with_validator-1.1-TypeError]" time="0.0035066604614257812"><system-out>Error validating [s=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[with_validator--ValueError]" time="0.00477147102355957"><system-out>Error validating [s=]: validation function [v.alid = (len(s) &gt; 0) and s.islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[with_validator-fOO-ValueError]" time="0.004688739776611328"><system-out>Error validating [s=fOO]: validation function [v.alid = (len(s) &gt; 0) and s.islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[class_field_mini_lambda-foo-True]" time="0.002710580825805664"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[class_field_mini_lambda-foo_123-True]" time="0.0037789344787597656"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[class_field_mini_lambda-1.1-TypeError]" time="0.005449056625366211"><system-out>Error validating field [s=1.1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [1.1]&quot;, &apos;len(s) &gt; 0&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;s.islower()&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;islower&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[class_field_mini_lambda--ValueError]" time="0.005838155746459961"><system-out>Error validating field [s=] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value []. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;] / Failures: {&apos;len(s) &gt; 0&apos;: &apos;False&apos;, &apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="105" name="test_example_2[class_field_mini_lambda-fOO-ValueError]" time="0.0044896602630615234"><system-out>Error validating field [s=fOO] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0, s.islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [fOO]. Successes: [&quot;instance_of_&lt;class &apos;str&apos;&gt;&quot;, &apos;len(s) &gt; 0&apos;] / Failures: {&apos;s.islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="126" name="test_example_2_regexp[foo@bar.com-True]" time="0.0023522377014160156"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example2" file="valid8/tests/test_readme_examples/test_example2.py" line="126" name="test_example_2_regexp[a@a@s-ValueError]" time="0.0023086071014404297"><system-out>Error validating [s=a@a@s]: validation function [&lt;lambda&gt;] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_mini_lambda-(0.2, &apos;foo&apos;)-True]" time="0.004108428955078125"><system-out>uncomment and put your breakpoint here to debug
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_mini_lambda-(1.0, &apos;abc&apos;)-True]" time="0.0051343441009521484"><system-out>uncomment and put your breakpoint here to debug
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_mini_lambda-(0, &apos;foo&apos;)-True]" time="0.0054035186767578125"><system-out>uncomment and put your breakpoint here to debug
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_mini_lambda-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.00566554069519043"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=1.1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1]&quot;, &apos;len(t) == 2&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;instance_of(t[0], Real)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;instance_of(t[1], str)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;len(t[1]) == 3&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;t[1].islower()&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_mini_lambda-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00455164909362793"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.2, &apos;foo&apos;, True)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;len(t) == 2&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_mini_lambda-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004988670349121094"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(&apos;1.0&apos;, &apos;foo&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;instance_of(t[0], Real)&apos;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0]&quot;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_mini_lambda-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005618572235107422"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(1.1, &apos;foo&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_mini_lambda-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005645751953125"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(1.0, False)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;] / Failures: {&apos;instance_of(t[1], str)&apos;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False]&quot;, &apos;len(t[1]) == 3&apos;: &quot;TypeError: object of type &apos;bool&apos; has no len()&quot;, &apos;t[1].islower()&apos;: &quot;AttributeError: &apos;bool&apos; object has no attribute &apos;islower&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_mini_lambda-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006216764450073242"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.5, &apos;a&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;len(t[1]) == 3&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_mini_lambda-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004442691802978516"><system-out>uncomment and put your breakpoint here to debug
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.5, &apos;AAA&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;] / Failures: {&apos;t[1].islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_boolean_tester-(0.2, &apos;foo&apos;)-True]" time="0.0037975311279296875"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_boolean_tester-(1.0, &apos;abc&apos;)-True]" time="0.0034835338592529297"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_boolean_tester-(0, &apos;foo&apos;)-True]" time="0.002874612808227539"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_boolean_tester-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0027430057525634766"><system-out>Error validating [t=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_boolean_tester-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004336833953857422"><system-out>Error validating [t=(0.2, &apos;foo&apos;, True)]: validation function [v.alid = len(t) == 2 \] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_boolean_tester-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004490852355957031"><system-out>Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_boolean_tester-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0045604705810546875"><system-out>Error validating [t=(1.1, &apos;foo&apos;)]: validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_boolean_tester-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.00475001335144043"><system-out>Error validating [t=(1.0, False)]. Validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \ ; and instance_of(t[1], str) and len(t[1]) == 3 and t[1].islower()] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_boolean_tester-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0044994354248046875"><system-out>Error validating [t=(0.5, &apos;a&apos;)]: validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \ ; and instance_of(t[1], str) and len(t[1]) == 3 and t[1].islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_boolean_tester-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004664421081542969"><system-out>Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [v.alid = len(t) == 2 \ ; and instance_of(t[0], Real) and (0 &lt;= t[0] &lt;= 1) \ ; and instance_of(t[1], str) and len(t[1]) == 3 and t[1].islower()] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_builtin_stdlib-(0.2, &apos;foo&apos;)-True]" time="0.0022919178009033203"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_builtin_stdlib-(1.0, &apos;abc&apos;)-True]" time="0.0033469200134277344"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_builtin_stdlib-(0, &apos;foo&apos;)-True]" time="0.0032973289489746094"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_builtin_stdlib-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0034589767456054688"><system-out>Error validating input [t=1.1] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1]&quot;, &apos;length_equals_2&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_builtin_stdlib-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0059947967529296875"><system-out>Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.2, &apos;foo&apos;, True)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;] / Failures: {&apos;length_equals_2&apos;: &quot;WrongLength: len(x) == 2 does not hold for x=(0.2, &apos;foo&apos;, True). Wrong value: [(0.2, &apos;foo&apos;, True)]&quot;, &quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;Failure: Wrong value: [on_each_: x does not have the same number of elements than validation_functions_collection.]&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_builtin_stdlib-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003740072250366211"><system-out>Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;, between_0_and_1)] raised [AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [] / Failures: {&quot;instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class \&apos;numbers.Real\&apos;&gt;. Wrong value: [1.0]&quot;, \&apos;between_0_and_1\&apos;: \&apos;TypeError: unorderable types: int() &lt;= str()\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_builtin_stdlib-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0044481754302978516"><system-out>Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;, between_0_and_1)] raised [AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [&quot;instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;&quot;] / Failures: {\&apos;between_0_and_1\&apos;: \&apos;NotInRange: 0 &lt;= x &lt;= 1 does not hold for x=1.1. Wrong value: [1.1]\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_builtin_stdlib-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004385232925415039"><system-out>Error validating input [t=(1.0, False)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value [False]. Successes: [] / Failures: {&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class \&apos;str\&apos;&gt;. Wrong value: [False]&quot;, \&apos;length_equals_3\&apos;: &quot;TypeError: object of type \&apos;bool\&apos; has no len()&quot;, \&apos;islower\&apos;: &quot;TypeError: descriptor \&apos;islower\&apos; requires a \&apos;str\&apos; object but received a \&apos;bool\&apos;&quot;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_builtin_stdlib-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005250453948974609"><system-out>Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value [a]. Successes: [&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;, \&apos;islower\&apos;] / Failures: {\&apos;length_equals_3\&apos;: \&apos;WrongLength: len(x) == 3 does not hold for x=a. Wrong value: [a]\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_builtin_stdlib-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005141258239746094"><system-out>Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value [AAA]. Successes: [&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;, \&apos;length_equals_3\&apos;] / Failures: {\&apos;islower\&apos;: \&apos;False\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0.2, &apos;foo&apos;)-True]" time="0.005159854888916016"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(1.0, &apos;abc&apos;)-True]" time="0.0038802623748779297"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0, &apos;foo&apos;)-True]" time="0.0024623870849609375"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.008155345916748047"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=1.1]. Validation function [v.alid = custom(t)] raised HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006462574005126953"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(0.2, &apos;foo&apos;, True)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004598140716552734"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [v.alid = custom(t)] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0041620731353759766"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(1.1, &apos;foo&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004558563232421875"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(1.0, False)]. Validation function [v.alid = custom(t)] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004824399948120117"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(0.5, &apos;a&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_boolean-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004570960998535156"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple
Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_pep_boolean-(0.2, &apos;foo&apos;)-True]" time="0.006124019622802734"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_pep_boolean-(1.0, &apos;abc&apos;)-True]" time="0.005227804183959961"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_pep_boolean-(0, &apos;foo&apos;)-True]" time="0.004931926727294922"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_pep_boolean-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.006485462188720703"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple_pep
Error validating [t=1.1]. Validation function [v.alid = custom(t)] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_pep_boolean-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006742000579833984"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple_pep
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [v.alid = custom(t)] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_pep_boolean-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.00836944580078125"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple_pep
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [v.alid = custom(t)] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_pep_boolean-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.010126113891601562"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple_pep
Error validating [t=(1.1, &apos;foo&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_pep_boolean-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.014139890670776367"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple_pep
Error validating [t=(1.0, False)]. Validation function [v.alid = custom(t)] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_pep_boolean-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.010643720626831055"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple_pep
Error validating [t=(0.5, &apos;a&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validator_custom_is_valid_tuple_pep_boolean-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005563974380493164"><system-out>calling function inline_validator_custom_boolean with custom func is_valid_tuple_pep
Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [v.alid = custom(t)] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_failure_raiser-(0.2, &apos;foo&apos;)-True]" time="0.0030851364135742188"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_failure_raiser-(1.0, &apos;abc&apos;)-True]" time="0.003811359405517578"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_failure_raiser-(0, &apos;foo&apos;)-True]" time="0.0051555633544921875"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_failure_raiser-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0036385059356689453"><system-out>Error validating [t=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_failure_raiser-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006216287612915039"><system-out>Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t))] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_failure_raiser-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0047740936279296875"><system-out>Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0]))] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_failure_raiser-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006649017333984375"><system-out>Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0])) ; if not (0 &lt;= t[0] &lt;= 1): ; raise ValueError(&apos;first elt should be between 0 and 1,found &apos; + str(t[0]))] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_failure_raiser-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.007319927215576172"><system-out>Error validating [t=(1.0, False)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0])) ; if not (0 &lt;= t[0] &lt;= 1): ; raise ValueError(&apos;first elt should be between 0 and 1,found &apos; + str(t[0])) ;  ; # the second element is a lowercase string of size 3 ; if not isinstance(t[1], str): ; raise TypeError(&apos;second elt should be a string, found &apos; + str(t[1]))] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_failure_raiser-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005158901214599609"><system-out>Error validating [t=(0.5, &apos;a&apos;)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0])) ; if not (0 &lt;= t[0] &lt;= 1): ; raise ValueError(&apos;first elt should be between 0 and 1,found &apos; + str(t[0])) ;  ; # the second element is a lowercase string of size 3 ; if not isinstance(t[1], str): ; raise TypeError(&apos;second elt should be a string, found &apos; + str(t[1])) ; if not (len(t[1]) == 3 and t[1].islower()): ; raise ValueError(&apos;second elt should be a lowercase string of length 3,&apos; ; &apos;found &apos; + str(t[1]))] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[with_validator_failure_raiser-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004930734634399414"><system-out>Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [# the tuple should be of length 2 ; if len(t) != 2: ; raise ValueError(&apos;tuple length should be 2, found &apos; + str(t)) ;  ; # the first element is a float between 0 and 1 ; if not isinstance(t[0], Real): ; raise TypeError(&apos;first elt should be a Real, found &apos; + str(t[0])) ; if not (0 &lt;= t[0] &lt;= 1): ; raise ValueError(&apos;first elt should be between 0 and 1,found &apos; + str(t[0])) ;  ; # the second element is a lowercase string of size 3 ; if not isinstance(t[1], str): ; raise TypeError(&apos;second elt should be a string, found &apos; + str(t[1])) ; if not (len(t[1]) == 3 and t[1].islower()): ; raise ValueError(&apos;second elt should be a lowercase string of length 3,&apos; ; &apos;found &apos; + str(t[1]))] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_pep_raiser-(0.2, &apos;foo&apos;)-True]" time="0.005643367767333984"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_pep_raiser-(1.0, &apos;abc&apos;)-True]" time="0.009081602096557617"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_pep_raiser-(0, &apos;foo&apos;)-True]" time="0.010528326034545898"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_pep_raiser-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.006765842437744141"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple_pep
Error validating [t=1.1]. Validation function [custom(t)] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_pep_raiser-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.011717796325683594"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple_pep
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [custom(t)] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_pep_raiser-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.010387182235717773"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple_pep
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [custom(t)] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_pep_raiser-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.009909391403198242"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple_pep
Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [custom(t)] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_pep_raiser-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.009624719619750977"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple_pep
Error validating [t=(1.0, False)]. Validation function [custom(t)] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_pep_raiser-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.009247541427612305"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple_pep
Error validating [t=(0.5, &apos;a&apos;)]. Validation function [custom(t)] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_pep_raiser-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.008283615112304688"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple_pep
Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [custom(t)] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0.2, &apos;foo&apos;)-True]" time="0.0037250518798828125"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(1.0, &apos;abc&apos;)-True]" time="0.005244255065917969"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0, &apos;foo&apos;)-True]" time="0.003313779830932617"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.005013704299926758"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=1.1]. Validation function [custom(t)] raised TypeError: item should be a tuple.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004296541213989258"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [custom(t)] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0050165653228759766"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [custom(t)] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0043332576751708984"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [custom(t)] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004621982574462891"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(1.0, False)]. Validation function [custom(t)] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004843711853027344"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(0.5, &apos;a&apos;)]. Validation function [custom(t)] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validation_custom_check_valid_tuple_raiser-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004800081253051758"><system-out>calling function inline_validation_custom_raiser with custom func check_valid_tuple
Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [custom(t)] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_1-(0.2, &apos;foo&apos;)-True]" time="0.0027556419372558594"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_1-(1.0, &apos;abc&apos;)-True]" time="0.0030181407928466797"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_1-(0, &apos;foo&apos;)-True]" time="0.002937793731689453"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_1-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0031664371490478516"><system-out>Error validating [t=1.1]. HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_1-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0031871795654296875"><system-out>Error validating [t=(0.2, &apos;foo&apos;, True)]. WrongLength: len(x) == 2 does not hold for x=(0.2, &apos;foo&apos;, True). Wrong value: [(0.2, &apos;foo&apos;, True)].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_1-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003795623779296875"><system-out>Error validating [t[0]=1.0]. HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_1-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0034074783325195312"><system-out>Error validating [t[0]=1.1]. TooBig: x &lt;= 1 does not hold for x=1.1. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_1-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0034987926483154297"><system-out>Error validating [t[1]=False]. HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_1-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0029976367950439453"><system-out>Error validating [t[1]=a]. WrongLength: len(x) == 3 does not hold for x=a. Wrong value: [a].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_1-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0034749507904052734"><system-out>Error validating [t[1]=AAA]: validation function [islower] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_builtin_stdlib-(0.2, &apos;foo&apos;)-True]" time="0.006180524826049805"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_builtin_stdlib-(1.0, &apos;abc&apos;)-True]" time="0.0048334598541259766"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_builtin_stdlib-(0, &apos;foo&apos;)-True]" time="0.004229545593261719"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_builtin_stdlib-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.003238677978515625"><system-out>Error validating field [t=1.1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1]&quot;, &apos;length_equals_2&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_builtin_stdlib-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003935098648071289"><system-out>Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.2, &apos;foo&apos;, True)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;] / Failures: {&apos;length_equals_2&apos;: &quot;WrongLength: len(x) == 2 does not hold for x=(0.2, &apos;foo&apos;, True). Wrong value: [(0.2, &apos;foo&apos;, True)]&quot;, &quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;Failure: Wrong value: [on_each_: x does not have the same number of elements than validation_functions_collection.]&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_builtin_stdlib-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.00669407844543457"><system-out>Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;, between_0_and_1)] raised [AtLeastOneFailed: At least one validation function failed validation for value [1.0]. Successes: [] / Failures: {&quot;instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class \&apos;numbers.Real\&apos;&gt;. Wrong value: [1.0]&quot;, \&apos;between_0_and_1\&apos;: \&apos;TypeError: unorderable types: int() &lt;= str()\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_builtin_stdlib-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005078554153442383"><system-out>Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;, between_0_and_1)] raised [AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [&quot;instance_of_&lt;class \&apos;numbers.Real\&apos;&gt;&quot;] / Failures: {\&apos;between_0_and_1\&apos;: \&apos;NotInRange: 0 &lt;= x &lt;= 1 does not hold for x=1.1. Wrong value: [1.1]\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_builtin_stdlib-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005976200103759766"><system-out>Error validating field [t=(1.0, False)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value [False]. Successes: [] / Failures: {&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class \&apos;str\&apos;&gt;. Wrong value: [False]&quot;, \&apos;length_equals_3\&apos;: &quot;TypeError: object of type \&apos;bool\&apos; has no len()&quot;, \&apos;islower\&apos;: &quot;TypeError: descriptor \&apos;islower\&apos; requires a \&apos;str\&apos; object but received a \&apos;bool\&apos;&quot;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_builtin_stdlib-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004021406173706055"><system-out>Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value [a]. Successes: [&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;, \&apos;islower\&apos;] / Failures: {\&apos;length_equals_3\&apos;: \&apos;WrongLength: len(x) == 3 does not hold for x=a. Wrong value: [a]\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_builtin_stdlib-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005496025085449219"><system-out>Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, length_equals_2, map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts)] raised AtLeastOneFailed: At least one validation function failed validation. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;length_equals_2&apos;] / Failures: {&quot;map_&lt;(and(instance_of_&lt;class &apos;numbers.Real&apos;&gt;, between_0_and_1), and(instance_of_&lt;class &apos;str&apos;&gt;, length_equals_3, islower))&gt;_on_elts&quot;: &apos;InvalidItemInSequence: Provided sequence contains one value that is invalid. Function [and(instance_of_&lt;class \&apos;str\&apos;&gt;, length_equals_3, islower)] raised [AtLeastOneFailed: At least one validation function failed validation for value [AAA]. Successes: [&quot;instance_of_&lt;class \&apos;str\&apos;&gt;&quot;, \&apos;length_equals_3\&apos;] / Failures: {\&apos;islower\&apos;: \&apos;False\&apos;}].&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.002110004425048828"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.003423452377319336"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0026569366455078125"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0030770301818847656"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=1.1]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003015279769897461"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(0.2, &apos;foo&apos;, True)]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0035393238067626953"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0032792091369628906"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(1.1, &apos;foo&apos;)]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004497528076171875"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(1.0, False)]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.002850770950317383"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(0.5, &apos;a&apos;)]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003329038619995117"><system-out>calling function inline_validate_custom with custom func is_valid_tuple
Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.0059816837310791016"><system-out>calling function inline_validate_custom with custom func is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.004153728485107422"><system-out>calling function inline_validate_custom with custom func is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.004446983337402344"><system-out>calling function inline_validate_custom with custom func is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0066356658935546875"><system-out>calling function inline_validate_custom with custom func is_valid_tuple_pep
Error validating [t=1.1]. Validation function [is_valid_tuple_pep] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006404399871826172"><system-out>calling function inline_validate_custom with custom func is_valid_tuple_pep
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [is_valid_tuple_pep] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005604743957519531"><system-out>calling function inline_validate_custom with custom func is_valid_tuple_pep
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [is_valid_tuple_pep] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.008005857467651367"><system-out>calling function inline_validate_custom with custom func is_valid_tuple_pep
Error validating [t=(1.1, &apos;foo&apos;)]: validation function [is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0061452388763427734"><system-out>calling function inline_validate_custom with custom func is_valid_tuple_pep
Error validating [t=(1.0, False)]. Validation function [is_valid_tuple_pep] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.007598161697387695"><system-out>calling function inline_validate_custom with custom func is_valid_tuple_pep
Error validating [t=(0.5, &apos;a&apos;)]: validation function [is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_is_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004434347152709961"><system-out>calling function inline_validate_custom with custom func is_valid_tuple_pep
Error validating [t=(0.5, &apos;AAA&apos;)]: validation function [is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.00813436508178711"><system-out>calling function inline_validate_custom with custom func check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.006888628005981445"><system-out>calling function inline_validate_custom with custom func check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.004510402679443359"><system-out>calling function inline_validate_custom with custom func check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.009053230285644531"><system-out>calling function inline_validate_custom with custom func check_valid_tuple_pep
Error validating [t=1.1]. Validation function [check_valid_tuple_pep] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.008895635604858398"><system-out>calling function inline_validate_custom with custom func check_valid_tuple_pep
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [check_valid_tuple_pep] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.00563359260559082"><system-out>calling function inline_validate_custom with custom func check_valid_tuple_pep
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [check_valid_tuple_pep] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0056841373443603516"><system-out>calling function inline_validate_custom with custom func check_valid_tuple_pep
Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [check_valid_tuple_pep] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.00581669807434082"><system-out>calling function inline_validate_custom with custom func check_valid_tuple_pep
Error validating [t=(1.0, False)]. Validation function [check_valid_tuple_pep] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005799293518066406"><system-out>calling function inline_validate_custom with custom func check_valid_tuple_pep
Error validating [t=(0.5, &apos;a&apos;)]. Validation function [check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005979061126708984"><system-out>calling function inline_validate_custom with custom func check_valid_tuple_pep
Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.0028412342071533203"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.0035414695739746094"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0031588077545166016"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.003390073776245117"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=1.1]. Validation function [check_valid_tuple] raised TypeError: item should be a tuple.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00357818603515625"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(0.2, &apos;foo&apos;, True)]. Validation function [check_valid_tuple] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0035207271575927734"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(&apos;1.0&apos;, &apos;foo&apos;)]. Validation function [check_valid_tuple] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0034377574920654297"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(1.1, &apos;foo&apos;)]. Validation function [check_valid_tuple] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003751993179321289"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(1.0, False)]. Validation function [check_valid_tuple] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0038263797760009766"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(0.5, &apos;a&apos;)]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[inline_validate_custom_check_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004740476608276367"><system-out>calling function inline_validate_custom with custom func check_valid_tuple
Error validating [t=(0.5, &apos;AAA&apos;)]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.0038406848907470703"><system-out>calling function function_input_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.0023529529571533203"><system-out>calling function function_input_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0037360191345214844"><system-out>calling function function_input_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.0038950443267822266"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=1.1] for function [my_function]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0038530826568603516"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0038840770721435547"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004878044128417969"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004202842712402344"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004843950271606445"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003754138946533203"><system-out>calling function function_input_custom with custom func is_valid_tuple
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.003644704818725586"><system-out>calling function function_input_custom with custom func is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.008260488510131836"><system-out>calling function function_input_custom with custom func is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.006166934967041016"><system-out>calling function function_input_custom with custom func is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.005375862121582031"><system-out>calling function function_input_custom with custom func is_valid_tuple_pep
Error validating input [t=1.1] for function [my_function]. Validation function [is_valid_tuple_pep] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0073699951171875"><system-out>calling function function_input_custom with custom func is_valid_tuple_pep
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [is_valid_tuple_pep] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006239652633666992"><system-out>calling function function_input_custom with custom func is_valid_tuple_pep
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [is_valid_tuple_pep] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0076067447662353516"><system-out>calling function function_input_custom with custom func is_valid_tuple_pep
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]: validation function [is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005427122116088867"><system-out>calling function function_input_custom with custom func is_valid_tuple_pep
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [is_valid_tuple_pep] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.007749319076538086"><system-out>calling function function_input_custom with custom func is_valid_tuple_pep
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]: validation function [is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_is_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.007620811462402344"><system-out>calling function function_input_custom with custom func is_valid_tuple_pep
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]: validation function [is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.003922224044799805"><system-out>calling function function_input_custom with custom func check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.005816459655761719"><system-out>calling function function_input_custom with custom func check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.005136251449584961"><system-out>calling function function_input_custom with custom func check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.00638580322265625"><system-out>calling function function_input_custom with custom func check_valid_tuple_pep
Error validating input [t=1.1] for function [my_function]. Validation function [check_valid_tuple_pep] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.010623693466186523"><system-out>calling function function_input_custom with custom func check_valid_tuple_pep
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [check_valid_tuple_pep] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.008812189102172852"><system-out>calling function function_input_custom with custom func check_valid_tuple_pep
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [check_valid_tuple_pep] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005325794219970703"><system-out>calling function function_input_custom with custom func check_valid_tuple_pep
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]. Validation function [check_valid_tuple_pep] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.00743865966796875"><system-out>calling function function_input_custom with custom func check_valid_tuple_pep
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [check_valid_tuple_pep] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.009018421173095703"><system-out>calling function function_input_custom with custom func check_valid_tuple_pep
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]. Validation function [check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005762338638305664"><system-out>calling function function_input_custom with custom func check_valid_tuple_pep
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]. Validation function [check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.0037412643432617188"><system-out>calling function function_input_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.0033202171325683594"><system-out>calling function function_input_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.0039014816284179688"><system-out>calling function function_input_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.003468751907348633"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=1.1] for function [my_function]. Validation function [check_valid_tuple] raised TypeError: item should be a tuple.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.007794618606567383"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(0.2, &apos;foo&apos;, True)] for function [my_function]. Validation function [check_valid_tuple] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0034563541412353516"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(&apos;1.0&apos;, &apos;foo&apos;)] for function [my_function]. Validation function [check_valid_tuple] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003625631332397461"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]. Validation function [check_valid_tuple] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004086732864379883"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(1.0, False)] for function [my_function]. Validation function [check_valid_tuple] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0034220218658447266"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[function_input_custom_check_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004451751708984375"><system-out>calling function function_input_custom with custom func check_valid_tuple
Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[pep484-(0.2, &apos;foo&apos;)-True]" time="0.004776716232299805"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[pep484-(1.0, &apos;abc&apos;)-True]" time="0.006296873092651367"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[pep484-(0, &apos;foo&apos;)-True]" time="0.007739067077636719"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[pep484-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.004704475402832031"><system-out>
  test_example3.my_function
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float]
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[pep484-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.030620574951171875"><system-out>
  test_example3.my_function
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]]
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[pep484-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.006097078323364258"><system-out>
  test_example3.my_function
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]]
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[pep484-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.008659124374389648"><system-out>Error validating input [t=(1.1, &apos;foo&apos;)] for function [my_function]. Validation function [and((t[0] &gt;= 0) &amp; (t[0] &lt;= 1), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(1.1, &apos;foo&apos;)]. Successes: [&apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[pep484-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.00843191146850586"><system-out>
  test_example3.my_function
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]]
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[pep484-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.009054183959960938"><system-out>Error validating input [t=(0.5, &apos;a&apos;)] for function [my_function]. Validation function [and((t[0] &gt;= 0) &amp; (t[0] &lt;= 1), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.5, &apos;a&apos;)]. Successes: [&apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;len(t[1]) == 3&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[pep484-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.008127212524414062"><system-out>Error validating input [t=(0.5, &apos;AAA&apos;)] for function [my_function]. Validation function [and((t[0] &gt;= 0) &amp; (t[0] &lt;= 1), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.5, &apos;AAA&apos;)]. Successes: [&apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;len(t[1]) == 3&apos;] / Failures: {&apos;t[1].islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_mini_lambda-(0.2, &apos;foo&apos;)-True]" time="0.004659175872802734"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_mini_lambda-(1.0, &apos;abc&apos;)-True]" time="0.004569292068481445"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_mini_lambda-(0, &apos;foo&apos;)-True]" time="0.003313779830932617"></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_mini_lambda-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.004854440689086914"><system-out>Error validating field [t=1.1] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [1.1]. Successes: [] / Failures: {&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1]&quot;, &apos;len(t) == 2&apos;: &quot;TypeError: object of type &apos;float&apos; has no len()&quot;, &apos;instance_of(t[0], Real)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;instance_of(t[1], str)&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;len(t[1]) == 3&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;, &apos;t[1].islower()&apos;: &quot;AttributeError: &apos;float&apos; object has no attribute &apos;__getitem__&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_mini_lambda-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.007506132125854492"><system-out>Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.2, &apos;foo&apos;, True)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;len(t) == 2&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_mini_lambda-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.00579380989074707"><system-out>Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(&apos;1.0&apos;, &apos;foo&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;instance_of(t[0], Real)&apos;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0]&quot;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &apos;TypeError: unorderable types: str() &gt;= int()&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_mini_lambda-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005399227142333984"><system-out>Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(1.1, &apos;foo&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_mini_lambda-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004337310791015625"><system-out>Error validating field [t=(1.0, False)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(1.0, False)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;] / Failures: {&apos;instance_of(t[1], str)&apos;: &quot;HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False]&quot;, &apos;len(t[1]) == 3&apos;: &quot;TypeError: object of type &apos;bool&apos; has no len()&quot;, &apos;t[1].islower()&apos;: &quot;AttributeError: &apos;bool&apos; object has no attribute &apos;islower&apos;&quot;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_mini_lambda-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0043141841888427734"><system-out>Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.5, &apos;a&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;t[1].islower()&apos;] / Failures: {&apos;len(t[1]) == 3&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_field_mini_lambda-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004754066467285156"><system-out>Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]. Validation function [and(instance_of_&lt;class &apos;tuple&apos;&gt;, len(t) == 2, instance_of(t[0], Real), (t[0] &gt;= 0) &amp; (t[0] &lt;= 1), instance_of(t[1], str), len(t[1]) == 3, t[1].islower())] raised AtLeastOneFailed: At least one validation function failed validation for value [(0.5, &apos;AAA&apos;)]. Successes: [&quot;instance_of_&lt;class &apos;tuple&apos;&gt;&quot;, &apos;len(t) == 2&apos;, &apos;instance_of(t[0], Real)&apos;, &apos;(t[0] &gt;= 0) &amp; (t[0] &lt;= 1)&apos;, &apos;instance_of(t[1], str)&apos;, &apos;len(t[1]) == 3&apos;] / Failures: {&apos;t[1].islower()&apos;: &apos;False&apos;}.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.0037038326263427734"><system-out>calling function class_fields_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.0035321712493896484"><system-out>calling function class_fields_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.004590034484863281"><system-out>calling function class_fields_custom with custom func is_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.00392603874206543"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=1.1] for class [Foo]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;tuple&apos;&gt;. Wrong value: [1.1].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0035147666931152344"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004990100860595703"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;numbers.Real&apos;&gt;. Wrong value: [1.0].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005469083786010742"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.005605459213256836"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(1.0, False)] for class [Foo]. Validation function [is_valid_tuple] raised HasWrongType: Value should be an instance of &lt;class &apos;str&apos;&gt;. Wrong value: [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004293918609619141"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.004052162170410156"><system-out>calling function class_fields_custom with custom func is_valid_tuple
Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]: validation function [is_valid_tuple] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.00536346435546875"><system-out>calling function class_fields_custom with custom func is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.008464574813842773"><system-out>calling function class_fields_custom with custom func is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.008539915084838867"><system-out>calling function class_fields_custom with custom func is_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.008669137954711914"><system-out>calling function class_fields_custom with custom func is_valid_tuple_pep
Error validating field [t=1.1] for class [Foo]. Validation function [is_valid_tuple_pep] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.007077455520629883"><system-out>calling function class_fields_custom with custom func is_valid_tuple_pep
Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [is_valid_tuple_pep] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.004655599594116211"><system-out>calling function class_fields_custom with custom func is_valid_tuple_pep
Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [is_valid_tuple_pep] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00485682487487793"><system-out>calling function class_fields_custom with custom func is_valid_tuple_pep
Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]: validation function [is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.00958251953125"><system-out>calling function class_fields_custom with custom func is_valid_tuple_pep
Error validating field [t=(1.0, False)] for class [Foo]. Validation function [is_valid_tuple_pep] raised InputTypeError: 
  test_example3.is_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.008089542388916016"><system-out>calling function class_fields_custom with custom func is_valid_tuple_pep
Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]: validation function [is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_is_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005078554153442383"><system-out>calling function class_fields_custom with custom func is_valid_tuple_pep
Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]: validation function [is_valid_tuple_pep] returned [False].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple_pep-(0.2, &apos;foo&apos;)-True]" time="0.008822202682495117"><system-out>calling function class_fields_custom with custom func check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple_pep-(1.0, &apos;abc&apos;)-True]" time="0.008677244186401367"><system-out>calling function class_fields_custom with custom func check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple_pep-(0, &apos;foo&apos;)-True]" time="0.00760197639465332"><system-out>calling function class_fields_custom with custom func check_valid_tuple_pep
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple_pep-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.009750127792358398"><system-out>calling function class_fields_custom with custom func check_valid_tuple_pep
Error validating field [t=1.1] for class [Foo]. Validation function [check_valid_tuple_pep] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[float].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple_pep-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.009210348129272461"><system-out>calling function class_fields_custom with custom func check_valid_tuple_pep
Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [check_valid_tuple_pep] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, str, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple_pep-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.009756803512573242"><system-out>calling function class_fields_custom with custom func check_valid_tuple_pep
Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [check_valid_tuple_pep] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[str, str]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple_pep-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.009961366653442383"><system-out>calling function class_fields_custom with custom func check_valid_tuple_pep
Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]. Validation function [check_valid_tuple_pep] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple_pep-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.0064280033111572266"><system-out>calling function class_fields_custom with custom func check_valid_tuple_pep
Error validating field [t=(1.0, False)] for class [Foo]. Validation function [check_valid_tuple_pep] raised InputTypeError: 
  test_example3.check_valid_tuple_pep
  called with incompatible types:
Expected: Tuple[Tuple[Real, str]]
Received: Tuple[Tuple[float, bool]].
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple_pep-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.005654335021972656"><system-out>calling function class_fields_custom with custom func check_valid_tuple_pep
Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]. Validation function [check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple_pep-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.006081104278564453"><system-out>calling function class_fields_custom with custom func check_valid_tuple_pep
Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]. Validation function [check_valid_tuple_pep] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple-(0.2, &apos;foo&apos;)-True]" time="0.0032699108123779297"><system-out>calling function class_fields_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple-(1.0, &apos;abc&apos;)-True]" time="0.0034575462341308594"><system-out>calling function class_fields_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple-(0, &apos;foo&apos;)-True]" time="0.003687620162963867"><system-out>calling function class_fields_custom with custom func check_valid_tuple
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple-1.1-&lt;class &apos;TypeError&apos;&gt;]" time="0.003732442855834961"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=1.1] for class [Foo]. Validation function [check_valid_tuple] raised TypeError: item should be a tuple.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple-(0.2, &apos;foo&apos;, True)-&lt;class &apos;ValueError&apos;&gt;]" time="0.003222227096557617"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(0.2, &apos;foo&apos;, True)] for class [Foo]. Validation function [check_valid_tuple] raised ValueError: tuple length should be 2, found (0.2, &apos;foo&apos;, True).
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple-(&apos;1.0&apos;, &apos;foo&apos;)-&lt;class &apos;TypeError&apos;&gt;]" time="0.003607034683227539"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(&apos;1.0&apos;, &apos;foo&apos;)] for class [Foo]. Validation function [check_valid_tuple] raised TypeError: first elt should be a Real, found 1.0.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple-(1.1, &apos;foo&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0037076473236083984"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(1.1, &apos;foo&apos;)] for class [Foo]. Validation function [check_valid_tuple] raised ValueError: first elt should be between 0 and 1,found 1.1.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple-(1.0, False)-&lt;class &apos;TypeError&apos;&gt;]" time="0.00509190559387207"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(1.0, False)] for class [Foo]. Validation function [check_valid_tuple] raised TypeError: second elt should be a string, found False.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple-(0.5, &apos;a&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.0049898624420166016"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(0.5, &apos;a&apos;)] for class [Foo]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found a.
</system-out></testcase><testcase classname="valid8.tests.test_readme_examples.test_example3" file="valid8/tests/test_readme_examples/test_example3.py" line="272" name="test_example_3[class_fields_custom_check_valid_tuple-(0.5, &apos;AAA&apos;)-&lt;class &apos;ValueError&apos;&gt;]" time="0.00455784797668457"><system-out>calling function class_fields_custom with custom func check_valid_tuple
Error validating field [t=(0.5, &apos;AAA&apos;)] for class [Foo]. Validation function [check_valid_tuple] raised ValueError: second elt should be a lowercase string of length 3,found AAA.
</system-out></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="7" name="test_is_in" time="0.0017540454864501953"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="15" name="test_contains" time="0.001466989517211914"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="22" name="test_is_subset_is_superset" time="0.0026803016662597656"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="45" name="test_on_all" time="0.0013849735260009766"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="54" name="test_on_each" time="0.0031290054321289062"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="63" name="test_haslen" time="0.001596689224243164"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="70" name="test_minlen" time="0.0017347335815429688"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="77" name="test_minlens" time="0.00160980224609375"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="84" name="test_maxlen" time="0.0015950202941894531"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="91" name="test_maxlens" time="0.001550912857055664"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="98" name="test_length_between" time="0.0018999576568603516"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_comparables" file="valid8/tests/test_validation_lib/test_validators_comparables.py" line="5" name="test_gt" time="0.0014495849609375"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_comparables" file="valid8/tests/test_validation_lib/test_validators_comparables.py" line="12" name="test_gts" time="0.0015211105346679688"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_comparables" file="valid8/tests/test_validation_lib/test_validators_comparables.py" line="19" name="test_lt" time="0.001688241958618164"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_comparables" file="valid8/tests/test_validation_lib/test_validators_comparables.py" line="26" name="test_lts" time="0.0009720325469970703"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_comparables" file="valid8/tests/test_validation_lib/test_validators_comparables.py" line="33" name="test_between" time="0.0017290115356445312"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_numbers" file="valid8/tests/test_validation_lib/test_validators_numbers.py" line="5" name="test_is_even" time="0.0008862018585205078"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_numbers" file="valid8/tests/test_validation_lib/test_validators_numbers.py" line="11" name="test_is_odd" time="0.0018317699432373047"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_numbers" file="valid8/tests/test_validation_lib/test_validators_numbers.py" line="17" name="test_is_multiple_of" time="0.0016956329345703125"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_types" file="valid8/tests/test_validation_lib/test_validators_types.py" line="5" name="test_instance_of" time="0.0018110275268554688"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_types" file="valid8/tests/test_validation_lib/test_validators_types.py" line="31" name="test_subclass_of" time="0.0018510818481445312"></testcase></testsuite>