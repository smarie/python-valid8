<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="1" name="pytest" skips="0" tests="50" time="1.024"><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="6" name="test_empty_validators_list" time="0.0017006397247314453"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="13" name="test_list_implicit_and" time="0.0022983551025390625"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="22" name="test_not_not_all" time="0.004826784133911133"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="56" name="test_validate_or" time="0.0016474723815917969"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="82" name="test_validate_xor" time="0.0017063617706298828"></testcase><testcase classname="valid8.tests.test_composition" file="valid8/tests/test_composition.py" line="106" name="test_validate_and" time="0.0019867420196533203"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="7" name="test_validate_arg_nominal_builtin_validators" time="0.0036749839782714844"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="37" name="test_validate_out" time="0.0026183128356933594"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="54" name="test_validate_nominal_builtin_validators" time="0.002986907958984375"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="84" name="test_validate_custom_validators_basic" time="0.004842996597290039"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="130" name="test_validate_custom_validators_with_exception" time="0.003690481185913086"><system-out>hello
1
2
3
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="180" name="test_validate_mini_lambda" time="0.002330303192138672"><system-out>Hello, john your age is 20
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="193" name="test_validate_none_enforce" time="0.005421161651611328"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="214" name="test_validate_none_pytypes" time="0.013150930404663086"><system-out>hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="235" name="test_validate_none_is_allowed" time="0.0022127628326416016"><system-out>hello
hello
</system-out></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="247" name="test_validate_name_error" time="0.0018444061279296875"></testcase><testcase classname="valid8.tests.test_entry_points_annotations" file="valid8/tests/test_entry_points_annotations.py" line="256" name="test_decorate_manually" time="0.002390146255493164"></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="7" name="test_readme_index_usage_basic" time="0.002612590789794922"></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="30" name="test_readme_index_usage_customization" time="0.002390623092651367"></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="86" name="test_readme_index_usage_composition" time="0.004576921463012695"></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="156" name="test_readme_index_usage_function" time="0.0043487548828125"><system-out>Building house... DONE !
Building house... DONE !
</system-out></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="185" name="test_readme_index_combining_enforce" time="0.009844779968261719"><system-out>Building house... DONE !
Building house... DONE !
</system-out></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="228" name="test_readme_index_combining_autoclass" time="0.01135706901550293"><failure message="Exception: Use of _add_contract_to_setter requires that validate library is installed. Check that you can &apos;import validate&apos;">setter_fun = &lt;function _get_setter_fun.&lt;locals&gt;.generated_setter_fun at 0x7f6bc3317e18&gt;
var_name = &apos;val&apos;
validators = [InputValidator&lt;validated_function=__init__, validation_function=and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0), none_policy=VALIDATE, exc_type=InvalidNameError&gt;]
property_name = &apos;name&apos;

    def _add_validators_to_setter(setter_fun, var_name, validators, property_name):
    
        # 0. check that we can import validate
        # note: this is useless now but maybe one day validate will be another project ?
        try:
            # noinspection PyUnresolvedReferences
&gt;           from valid8 import validate, validate_decorate
E           ImportError: cannot import name &apos;validate_decorate&apos;

../../../virtualenv/python3.5.4/lib/python3.5/site-packages/autoclass/autoprops.py:331: ImportError

During handling of the above exception, another exception occurred:

    def test_readme_index_combining_autoclass():
        &quot;&quot;&quot; Tests that the examples provided in the index page under Combining/autoclass are correct &quot;&quot;&quot;
    
        from autoclass import autoclass
        from mini_lambda import s, x, l, Len
        from valid8 import validate_arg, instance_of, is_multiple_of
    
        class InvalidNameError(InputValidationError):
            help_msg = &apos;name should be a non-empty string&apos;
    
        class InvalidSurfaceError(InputValidationError):
            help_msg = &apos;Surface should be between 0 and 10000 and be a multiple of 100.&apos;
    
&gt;       @autoclass
        class House:

valid8/tests/test_readme_index.py:242: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../virtualenv/python3.5.4/lib/python3.5/site-packages/autoclass/autoclass.py:23: in autoclass
    autoprops=autoprops, autodict=autodict)
../../../virtualenv/python3.5.4/lib/python3.5/site-packages/autoclass/utils_decoration.py:66: in _create_class_decorator__robust_to_args
    return _call_decorator_with_or_without_args(decorator_impl, False, *args, **kwargs)
../../../virtualenv/python3.5.4/lib/python3.5/site-packages/autoclass/utils_decoration.py:37: in _call_decorator_with_or_without_args
    return decorator_function_impl(*args, **kwargs)
../../../virtualenv/python3.5.4/lib/python3.5/site-packages/autoclass/autoclass.py:46: in autoclass_decorate
    autoprops_decorate(cls, include=include, exclude=exclude)
../../../virtualenv/python3.5.4/lib/python3.5/site-packages/autoclass/autoprops.py:66: in autoprops_decorate
    _execute_autoprops_on_class(cls, include=include, exclude=exclude)
../../../virtualenv/python3.5.4/lib/python3.5/site-packages/autoclass/autoprops.py:113: in _execute_autoprops_on_class
    validators=(validators_dict[attr_name] if attr_name in validators_dict.keys() else None))
../../../virtualenv/python3.5.4/lib/python3.5/site-packages/autoclass/autoprops.py:159: in _add_property
    property_name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

setter_fun = &lt;function _get_setter_fun.&lt;locals&gt;.generated_setter_fun at 0x7f6bc3317e18&gt;
var_name = &apos;val&apos;
validators = [InputValidator&lt;validated_function=__init__, validation_function=and(instance_of_&lt;class &apos;str&apos;&gt;, len(s) &gt; 0), none_policy=VALIDATE, exc_type=InvalidNameError&gt;]
property_name = &apos;name&apos;

    def _add_validators_to_setter(setter_fun, var_name, validators, property_name):
    
        # 0. check that we can import validate
        # note: this is useless now but maybe one day validate will be another project ?
        try:
            # noinspection PyUnresolvedReferences
            from valid8 import validate, validate_decorate
        except ImportError:
&gt;           raise Exception(&apos;Use of _add_contract_to_setter requires that validate library is installed. Check that you can&apos;
                            &apos; \&apos;import validate\&apos;&apos;)
E           Exception: Use of _add_contract_to_setter requires that validate library is installed. Check that you can &apos;import validate&apos;

../../../virtualenv/python3.5.4/lib/python3.5/site-packages/autoclass/autoprops.py:333: Exception</failure></testcase><testcase classname="valid8.tests.test_readme_index" file="valid8/tests/test_readme_index.py" line="259" name="test_unused_pytypes" time="0.012945175170898438"><system-out>you did it !
you did it !
</system-out></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="5" name="test_tutorial" time="0.002568483352661133"></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="66" name="test_usage_base_validation_functions" time="0.0016989707946777344"></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="72" name="test_usage_ensure_valid" time="0.002864360809326172"></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="122" name="test_usage_is_valid" time="0.00238800048828125"></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="162" name="test_usage_validators" time="0.0030324459075927734"></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="317" name="test_usage_validate_annotation" time="0.0025115013122558594"></testcase><testcase classname="valid8.tests.test_readme_usage" file="valid8/tests/test_readme_usage.py" line="334" name="test_usage_custom_validators" time="0.003203153610229492"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="7" name="test_is_in" time="0.0012247562408447266"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="15" name="test_is_subset_is_superset" time="0.0023479461669921875"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="38" name="test_on_all" time="0.0016505718231201172"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="47" name="test_on_each" time="0.0015904903411865234"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="56" name="test_minlen" time="0.0017249584197998047"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="63" name="test_minlens" time="0.0010612010955810547"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="70" name="test_maxlen" time="0.001125335693359375"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="77" name="test_maxlens" time="0.0015673637390136719"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_collections" file="valid8/tests/test_validation_lib/test_validators_collections.py" line="84" name="test_length_between" time="0.0011489391326904297"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_comparables" file="valid8/tests/test_validation_lib/test_validators_comparables.py" line="5" name="test_gt" time="0.0015113353729248047"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_comparables" file="valid8/tests/test_validation_lib/test_validators_comparables.py" line="12" name="test_gts" time="0.0013461112976074219"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_comparables" file="valid8/tests/test_validation_lib/test_validators_comparables.py" line="19" name="test_lt" time="0.0021152496337890625"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_comparables" file="valid8/tests/test_validation_lib/test_validators_comparables.py" line="26" name="test_lts" time="0.0011649131774902344"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_comparables" file="valid8/tests/test_validation_lib/test_validators_comparables.py" line="33" name="test_between" time="0.0012209415435791016"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_numbers" file="valid8/tests/test_validation_lib/test_validators_numbers.py" line="5" name="test_is_even" time="0.0016145706176757812"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_numbers" file="valid8/tests/test_validation_lib/test_validators_numbers.py" line="11" name="test_is_odd" time="0.0009677410125732422"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_numbers" file="valid8/tests/test_validation_lib/test_validators_numbers.py" line="17" name="test_is_multiple_of" time="0.0015497207641601562"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_types" file="valid8/tests/test_validation_lib/test_validators_types.py" line="5" name="test_instance_of" time="0.001130819320678711"></testcase><testcase classname="valid8.tests.test_validation_lib.test_validators_types" file="valid8/tests/test_validation_lib/test_validators_types.py" line="19" name="test_subclass_of" time="0.0014765262603759766"></testcase></testsuite>